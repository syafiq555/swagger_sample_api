{
    "swagger": "2.0",
    "info": {
        "title": "Biztory API",
        "description": "\nThis is an API documentation of [Biztory](http://www.biztory.com.my)\nto help developer integrate any existing platform into Biztory accounting core engine.\n# Prerequisite\nYou need to enable API functionality in your Biztory account in order to obtain your\nAPI key. For every API call, you have to append the API key as `query` or append it in your\n`header`.\n```\n# example 1\nPOST: https://YOUR_BIZTORY_SUBDOMAIN.biztory.com.my/api_v1/sale?api_key=XXXX\n\n# example 2\nHeader: {'Api-key': 'XXXXX'}\n```\nPlease follow the steps to enable API in your Biztory account:\n* Edit your profile and assign **Developer** role, save the changes\n* Go to My Biztory > Developer, enable the API feature\n---\n\t \t\t   ",
        "contact": {
            "email": "info@biztory.com.my"
        },
        "version": "1.6.3"
    },
    "host": "techstrongbox.biztory.com.my",
    "basePath": "/api_v1",
    "schemes": [
        "https"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/api_login": {
            "post": {
                "tags": [
                    "login/logout"
                ],
                "summary": "Api login",
                "description": "Login url",
                "operationId": "api.user.login",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "login data to authentication",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/LoginSuccess"
                        }
                    }
                }
            }
        },
        "/api_logout": {
            "get": {
                "tags": [
                    "login/logout"
                ],
                "summary": "Api logout",
                "description": "Logout url",
                "operationId": "api.user.logout",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Logout from Biztory",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apiLogout"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/LogoutSuccess"
                        }
                    }
                }
            }
        },
        "/sale": {
            "get": {
                "tags": [
                    "sale"
                ],
                "summary": "List sale invoice",
                "description": "Get paginated list of sale invoices (50 invoices per page)",
                "parameters": [
                    {
                        "name": "_q",
                        "in": "query",
                        "description": "The query condition act as `%keyword%`. Get result by field `ref_num`, `payee`, `invoice_date`. Valid input:*INV001, John, phone, 29-01-2020*",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter invoice by status. Valid input:*unpaid, undelivered, archived*",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page to retrieve",
                        "required": false,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/savedSale"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "sale"
                ],
                "summary": "Create new invoice",
                "description": "Insert a new sale invoice into listing.",
                "operationId": "api.sale.store",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "invoice data to create new sale invoice",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newSale"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SaleStoreSuccess"
                        }
                    }
                }
            }
        },
        "/sale/{id}": {
            "get": {
                "tags": [
                    "sale"
                ],
                "summary": "Get sale invoice by ID",
                "description": "Get sale invoice detail",
                "operationId": "api.sale.show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetSaleSuccess"
                        }
                    }
                }
            }
        },
        "/sale/{id}/update": {
            "put": {
                "tags": [
                    "sale"
                ],
                "summary": "Update sale invoice",
                "description": "Update sale invoice details",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "invoice data to create new sale invoice",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newSale"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetSaleSuccess"
                        }
                    }
                }
            }
        },
        "/quote": {
            "post": {
                "tags": [
                    "quotation"
                ],
                "summary": "Create new quotation",
                "description": "Insert a new quotation into listing.",
                "operationId": "api.quotation.store",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "invoice data to create new quotation",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newQuotation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SaleStoreSuccess"
                        }
                    }
                }
            }
        },
        "/quote/{id}": {
            "get": {
                "tags": [
                    "quotation"
                ],
                "summary": "Get quotation invoice",
                "description": "Get quotation invoice detail",
                "operationId": "api.quotation.show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/GetSaleSuccess"
                        }
                    }
                }
            }
        },
        "/sale/{id}/pay": {
            "put": {
                "tags": [
                    "sale"
                ],
                "summary": "Update payment",
                "description": "Update payment on selected sales invoice.",
                "operationId": "api.sale.update_pay",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sale invoice ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "trans_id",
                        "in": "query",
                        "description": "Update sale invoice payment by ID. Example `trans_id = 100`",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/UpdateSalePaymentSuccess"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "sale"
                ],
                "summary": "Make payment",
                "description": "Knock off payment on selected sales invoice.",
                "operationId": "api.sale.pay",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sale invoice ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Payment data to apply on invoice",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/salePayment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SalePaymentSuccess"
                        }
                    }
                }
            }
        },
        "/sale/{id}/delete_payment": {
            "delete": {
                "tags": [
                    "sale"
                ],
                "summary": "Delete payment",
                "description": "Delete payment on selected sales invoice.",
                "operationId": "api.sale.del_pay",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Sale invoice ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "trans_id",
                        "in": "query",
                        "description": "Delete sale invoice payment by ID. Must concat string `del_` with `payment ID`. Example `del_100`",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/DeleteSalePaymentSuccess"
                        }
                    }
                }
            }
        },
        "/purchase": {
            "get": {
                "tags": [
                    "purchase"
                ],
                "summary": "List purchase invoice",
                "description": "List all purchase invoice details",
                "parameters": [
                    {
                        "name": "_q",
                        "in": "query",
                        "description": "The query condition act as `%keyword%`. Get result by field `ref_num`, `payee`, `invoice_date`. Valid input: *INV001 , John , phone , 29-01-2020*",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter invoice by status. Valid input:*unpaid , undelivered , archived*",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PurchaseSearchSuccess"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "purchase"
                ],
                "summary": "Create new invoice",
                "description": "Insert a new purchase invoice into listing.",
                "operationId": "api.purchase.store",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "invoice data to create new purchase invoice",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newPurchase"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PurchaseStoreSuccess"
                        }
                    }
                }
            }
        },
        "/customer": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "List all customers",
                "description": "Retrieve all customers details.",
                "operationId": "api.list.customer",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Order by ascending or descending.Valid input:*asc, desc*",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "predicate",
                        "in": "query",
                        "description": "Default result is ascending.Input name, address, phone, email to sort result as descending.Valid input:*name, address, phone, email*",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter customer by `recent` last 6 months, `rich` get total of sales, and `grouping` by state. Valid input:*recent ,rich, grouping*",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/getCustomerSuccess"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "customer"
                ],
                "summary": "Create new customer",
                "description": "Insert a new customer.",
                "operationId": "api.customer.store",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Customer data to create new customer",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newCustomer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomerStoreSuccess"
                        }
                    }
                }
            }
        },
        "/customer/{id}/invoice": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "List sales by customer",
                "description": "Retrieve all sales invoices by customer ID.",
                "operationId": "api.customer.invoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Filter invoice by ref_num and invoice_date.Valid input:*INV001,2019-03-15*",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Default result is ascending.Input id, ref_num, invoice_date to sort result as\n\t   \t\t\t\tdescending.Valid input:*id, ref_num, invoice_date*",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter invoice by payment status and delivery status. Valid input:*unpaid ,undelivered*",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/SearchSaleSuccess"
                        }
                    }
                }
            }
        },
        "/customer/{id}/statement": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "Get customer statement",
                "description": "Retrieve customer statement by customer ID.",
                "operationId": "api.customer.statement",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomerStatementListSuccess"
                        }
                    }
                }
            }
        },
        "/customer/{id}/transaction": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "List transactions by customer",
                "description": "Retrieve all payment transactions by customer ID.",
                "operationId": "api.customer.transaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/CustomerTransactionSuccess"
                        }
                    }
                }
            }
        },
        "/customer/{id}/soa": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "List statement of account by customer",
                "description": "Retrieve all statement of account by customer ID.",
                "operationId": "api.customer.soa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "startdate",
                        "in": "query",
                        "description": "Start date of statement of account.Valid input:*2019-03-15*",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "enddate",
                        "in": "query",
                        "description": "End date of statement of account.Valid input:*2019-06-15*",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/StatementOfAccountListSuccess"
                        }
                    }
                }
            }
        },
        "/customer/{id}/aging": {
            "get": {
                "tags": [
                    "customer"
                ],
                "summary": "List aging by customer",
                "description": "Retrieve all aging by customer ID.",
                "operationId": "api.customer.aging",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Customer ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "startdate",
                        "in": "query",
                        "description": "Start date of statement of account.Valid input:*2019-03-15*",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "enddate",
                        "in": "query",
                        "description": "End date of statement of account.Valid input:*2019-06-15*",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AgingListSuccess"
                        }
                    }
                }
            }
        },
        "/product": {
            "get": {
                "tags": [
                    "product"
                ],
                "summary": "Get all product",
                "description": "List all the product",
                "operationId": "api.product.index",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Order by ascending or descending.Valid input:*asc, desc*",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Default to all category. Input category ID, Valid input: *1,2,3*",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "predicate",
                        "in": "query",
                        "description": "Default result is ascending.Input available_stock , sku, name, selling_price to sort result as descending.Valid input:*available_stock , sku, name, selling_price*",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter product by existing product and deleted. Valid input:*archived*",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/getProductSuccess"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "product"
                ],
                "summary": "Create new product",
                "description": "Insert a new product into listing.",
                "operationId": "api.product.store",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "metadata to create a new product",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newProduct"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ProductStoreSuccess"
                        }
                    }
                }
            }
        },
        "/product/{id}": {
            "get": {
                "tags": [
                    "product"
                ],
                "summary": "Get product",
                "description": "Get product detail",
                "operationId": "api.product.show",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ProductShowSuccess"
                        }
                    }
                }
            }
        },
        "/product/code/{code}": {
            "get": {
                "tags": [
                    "product"
                ],
                "summary": "Get product by Code",
                "description": "Get product detail",
                "operationId": "api.product.show",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Product Code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ProductSkuShowSuccess"
                        }
                    }
                }
            }
        },
        "/expense": {
            "post": {
                "tags": [
                    "expense"
                ],
                "summary": "Create new expense",
                "description": "Insert a new expense into listing.",
                "operationId": "api.expense.store",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "expense data to create new expense",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newExpense"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ExpenseStoreSuccess"
                        }
                    }
                }
            }
        },
        "/expense/{id}/update": {
            "put": {
                "tags": [
                    "expense"
                ],
                "summary": "Update expense",
                "description": "Update a existing expense from listing.",
                "operationId": "api.expense.update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "update data to existing expense",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newExpense"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ExpenseStoreSuccess"
                        }
                    }
                }
            }
        },
        "/account/bank/all": {
            "get": {
                "tags": [
                    "wallet"
                ],
                "summary": "Get all banks",
                "description": "List all the available banks.",
                "operationId": "api.account.bank.all",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/BankListSuccess"
                        }
                    }
                }
            }
        },
        "/account": {
            "get": {
                "tags": [
                    "wallet"
                ],
                "summary": "Get all wallets",
                "description": "List all the available wallets.",
                "operationId": "api.account.all",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AccountListSuccess"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "wallet"
                ],
                "summary": "New Wallet",
                "description": "Insert a new wallet into listing.",
                "operationId": "api.account.store",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "wallet data to create new wallet",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AccountStoreSuccess"
                        }
                    }
                }
            }
        },
        "/payment_method": {
            "get": {
                "tags": [
                    "payment method"
                ],
                "summary": "Get all Payment Methods",
                "description": "List all the available Payment Methods.",
                "operationId": "api.payment_method.all",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PaymentMethodListSuccess"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "payment method"
                ],
                "summary": "New Payment Method",
                "description": "Insert a new payment method into listing.",
                "operationId": "api.payment_method.store",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "payment method data to create new payment method",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newPaymentMethod"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/PaymentMethodStoreSuccess"
                        }
                    }
                }
            }
        },
        "/payment_method/{id}": {
            "put": {
                "tags": [
                    "payment method"
                ],
                "summary": "Update Payment Method",
                "description": "Update payment method details.",
                "operationId": "api.payment_method.update",
                "parameters": [
                    {
                        "name": "ID",
                        "in": "path",
                        "description": "Payment method ID",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "update payment method name",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdatePaymentMethod"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "property": "data",
                            "description": "update payment method",
                            "$ref": "#/definitions/savedPaymentMethod"
                        }
                    }
                }
            }
        },
        "/journal": {
            "post": {
                "tags": [
                    "journal"
                ],
                "summary": "Create new journal",
                "description": "Insert a new journal.",
                "operationId": "api.journal.store",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "journal data to create new journal",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newJournal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/JournalStoreSuccess"
                        }
                    }
                }
            }
        },
        "/chart_of_account": {
            "post": {
                "tags": [
                    "chart of account"
                ],
                "summary": "Create new chart of account",
                "description": "Insert a new chart of account.",
                "operationId": "api.chart_of_account.store",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "data to create new chart of account",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newChartOfAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ChartOfAccountStoreSuccess"
                        }
                    }
                }
            }
        },
        "/chart_of_account/account_type": {
            "get": {
                "tags": [
                    "chart of account"
                ],
                "summary": "Get all account types",
                "description": "List all the available account types to be associated with chart of account.",
                "operationId": "api.chart_of_account.get_account_type",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/AccountTypeListSuccess"
                        }
                    }
                }
            }
        },
        "/chart_of_account/{code}": {
            "get": {
                "tags": [
                    "chart of account"
                ],
                "summary": "Get chart of account by code",
                "description": "Get chart of account by code.",
                "operationId": "api.chart_of_account.get_chart_of_account",
                "parameters": [
                    {
                        "name": "Code",
                        "in": "path",
                        "description": "Code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ChartOfAccountByCode"
                        }
                    }
                }
            }
        },
        "/recurring": {
            "get": {
                "tags": [
                    "recurring"
                ],
                "summary": "Get list of recurring",
                "description": "Get list of invoice detail",
                "operationId": "api.recurring.index",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/listRecurring"
                        }
                    }
                }
            }
        },
        "/recurring/{id}": {
            "delete": {
                "tags": [
                    "recurring"
                ],
                "summary": "Delete recurring",
                "description": "Delete recurring by id",
                "operationId": "api.recurring.destroy",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/deleteRecurring"
                        }
                    }
                }
            }
        },
        "/branch/all": {
            "get": {
                "tags": [
                    "branch"
                ],
                "summary": "Get all Branches",
                "description": "List all the available Branches.",
                "operationId": "api.branch.all",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/brachLists"
                        }
                    }
                }
            }
        },
        "/vendor": {
            "get": {
                "tags": [
                    "Supplier"
                ],
                "summary": "List all suppliers",
                "description": "Retrieve all supplier details.",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Order by ascending or descending.Valid input:*asc, desc*",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "predicate",
                        "in": "query",
                        "description": "Default result is ascending.Input name, billing address, business registration number,GST registration number and date GST status verified to sort result as descending. Valid input:*name, billing_addr, brn, grn , date_gst_status_verified*",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Filter supplier by existing or archived suppliers . Valid input:*archived*",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/getVendorSuccess"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Supplier"
                ],
                "summary": "Create new supplier",
                "description": "Insert a new supplier.",
                "operationId": "api.vendor.store",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Supplier data to create new supplier",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newVendor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/VendorStoreSuccess"
                        }
                    }
                }
            }
        },
        "/command/{cmd}": {
            "post": {
                "tags": [
                    "command"
                ],
                "summary": "Commands API",
                "description": "Use command to process data",
                "operationId": "api.commmand",
                "parameters": [
                    {
                        "name": "cmd",
                        "in": "path",
                        "description": "Empty cache for user. Available value `empty_cahe`",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/commandSuccess"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Error": {
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "AccountListSuccess": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/savedAccount"
            }
        },
        "AccountStoreSuccess": {
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "created": {
                    "type": "boolean",
                    "example": true
                },
                "updated": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Successfully updated Object!"
                },
                "data": {
                    "$ref": "#/definitions/savedAccount"
                }
            },
            "type": "object"
        },
        "BankListSuccess": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/bank"
            }
        },
        "brachLists": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/brachListsSucess"
            }
        },
        "brachListsSucess": {
            "properties": {
                "id": {
                    "description": "Branch ID",
                    "type": "string",
                    "example": "1"
                },
                "name": {
                    "description": "Branch name",
                    "type": "string",
                    "example": "Branch (Selangor)"
                },
                "hq": {
                    "description": "Value to determine which branch is HQ. Value = `1` or `0`",
                    "type": "integer",
                    "example": "1"
                },
                "company_name": {
                    "description": "Company name for branch",
                    "type": "string",
                    "example": "Biztory"
                },
                "company_brn": {
                    "description": "Company brn for branch",
                    "type": "string",
                    "example": "Business Registration No"
                },
                "company_addr": {
                    "description": "Company address for branch",
                    "type": "string",
                    "example": "Co3 Social Office"
                },
                "company_contact": {
                    "description": "Company contact for branch",
                    "type": "string",
                    "example": "0120000000"
                },
                "company_fax": {
                    "description": "Company fax for branch",
                    "type": "string",
                    "example": "0300000000"
                },
                "company_email": {
                    "description": "Company email for branch",
                    "type": "string",
                    "example": "Biztory@gmail.com"
                },
                "created_at": {
                    "description": "Branch created date",
                    "type": "string",
                    "format": "date"
                }
            },
            "type": "object"
        },
        "ChartOfAccountByCode": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/GetChartOfAccountByCode"
            }
        },
        "AccountTypeListSuccess": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/AccountType"
            }
        },
        "ChartOfAccountStoreSuccess": {
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "created": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Successfully updated Object!"
                },
                "data": {
                    "$ref": "#/definitions/savedChartOfAccount"
                }
            },
            "type": "object"
        },
        "getCustomerSuccess": {
            "properties": {
                "total": {
                    "type": "number",
                    "example": "1"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/getCustomer"
                    }
                }
            },
            "type": "object"
        },
        "ExpenseStoreSuccess": {
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "created": {
                    "type": "boolean",
                    "example": true
                },
                "updated": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Successfully updated Object!"
                },
                "data": {
                    "$ref": "#/definitions/savedExpense"
                }
            },
            "type": "object"
        },
        "JournalStoreSuccess": {
            "properties": {
                "success": {
                    "description": "Store a newly created resource in storage.",
                    "type": "boolean",
                    "example": true
                },
                "created": {
                    "description": "Store a newly created resource in storage.",
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "description": "Store a newly created resource in storage.",
                    "type": "string",
                    "example": "Successfully updated Object!"
                },
                "data": {
                    "description": "Store a newly created resource in storage.",
                    "$ref": "#/definitions/savedJournal"
                },
                "journal_items": {
                    "description": "journal items detail",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/savedJournal_item"
                    }
                }
            },
            "type": "object"
        },
        "PaymentMethodListSuccess": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/savedPaymentMethod"
            }
        },
        "PaymentMethodStoreSuccess": {
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "created": {
                    "type": "boolean",
                    "example": true
                },
                "updated": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Successfully updated Object!"
                },
                "data": {
                    "$ref": "#/definitions/savedPaymentMethod"
                }
            },
            "type": "object"
        },
        "UpdatePaymentMethod": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "Name of the payment method",
                    "type": "string",
                    "example": "Online Transfer"
                }
            },
            "type": "object"
        },
        "ProductShowSuccess": {
            "properties": {
                "id": {
                    "description": "Product ID",
                    "type": "integer",
                    "example": "1"
                }
            },
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/basicProduct"
                },
                {
                    "$ref": "#/definitions/ProductStock"
                }
            ]
        },
        "ProductSkuShowSuccess": {
            "properties": {
                "id": {
                    "description": "Product ID",
                    "type": "integer",
                    "example": "1"
                }
            },
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/basicProduct"
                },
                {
                    "$ref": "#/definitions/ProductStock"
                }
            ]
        },
        "ProductStoreSuccess": {
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "created": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Successfully created Object!"
                },
                "data": {
                    "$ref": "#/definitions/savedProduct"
                }
            },
            "type": "object"
        },
        "statementRecord": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer",
                    "example": "1"
                },
                "ref_num": {
                    "description": "Sale Invoice Number",
                    "type": "string",
                    "example": "INV0001"
                },
                "remark": {
                    "description": "Remarks",
                    "type": "string",
                    "example": "100%|today"
                },
                "paid": {
                    "type": "number",
                    "example": "0.00"
                },
                "date": {
                    "type": "string",
                    "format": "date"
                },
                "due_date": {
                    "type": "string",
                    "format": "date"
                },
                "total": {
                    "type": "number",
                    "example": "660.00"
                },
                "due": {
                    "type": "number",
                    "example": "660.00"
                }
            },
            "type": "object"
        },
        "dueAmount": {
            "properties": {
                "current": {
                    "type": "number",
                    "example": "0"
                },
                "overdue_30": {
                    "type": "number",
                    "example": "188"
                },
                "overdue_60": {
                    "type": "number",
                    "example": "550"
                },
                "overdue_90": {
                    "type": "number",
                    "example": "12842.4"
                },
                "above_90": {
                    "type": "number",
                    "example": "0"
                },
                "total_due": {
                    "type": "number",
                    "example": "13580.4"
                }
            },
            "type": "object"
        },
        "CustomerStatementListSuccess": {
            "properties": {
                "payee_id": {
                    "description": "Customer ID",
                    "type": "integer",
                    "example": "1"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/statementRecord"
                    }
                },
                "due": {
                    "$ref": "#/definitions/dueAmount"
                }
            },
            "type": "object"
        },
        "CustomerTransactionSuccess": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/transactionRecord"
            }
        },
        "SearchSaleSuccess": {
            "properties": {
                "total": {
                    "type": "number",
                    "example": "1"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/savedSale"
                    }
                }
            },
            "type": "object"
        },
        "SaleStoreSuccess": {
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "created": {
                    "type": "boolean",
                    "example": true
                },
                "updated": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Successfully updated Object!"
                },
                "data": {
                    "$ref": "#/definitions/savedSale"
                },
                "invoice_items": {
                    "description": "invoice items detail",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/savedSale_item"
                    }
                }
            },
            "type": "object"
        },
        "SalePaymentSuccess": {
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "updated": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Payment make successfully."
                },
                "invoice_items": {
                    "description": "invoice items detail",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/savedSale_item"
                    }
                },
                "data": {
                    "$ref": "#/definitions/savedSale"
                },
                "transaction": {
                    "$ref": "#/definitions/paymentTransaction"
                }
            },
            "type": "object"
        },
        "UpdateSalePaymentSuccess": {
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "updated": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Payment make successfully."
                },
                "payment": {
                    "description": "invoice update payment details",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/saved_payment"
                    }
                },
                "data": {
                    "$ref": "#/definitions/savedSale"
                },
                "transaction": {
                    "$ref": "#/definitions/paymentTransaction"
                }
            },
            "type": "object"
        },
        "saved_payment": {
            "properties": {
                "paid": {
                    "description": "Payment paid amount",
                    "type": "string",
                    "example": "100.00"
                },
                "due": {
                    "description": "Invoice due amount",
                    "type": "string",
                    "example": "10.00"
                },
                "payment_status": {
                    "description": "Invoice payment status",
                    "type": "number",
                    "example": 1
                },
                "delivery_status": {
                    "description": "Delivery status",
                    "type": "number",
                    "example": 0
                }
            },
            "type": "object"
        },
        "paymentTransaction": {
            "properties": {
                "id": {
                    "description": "Payment ID",
                    "type": "number",
                    "example": 1
                },
                "payment_method_id": {
                    "description": "Payment method id",
                    "type": "number",
                    "example": "1"
                },
                "amount": {
                    "description": "Payment amount",
                    "type": "string",
                    "example": "200.00"
                },
                "payment_date": {
                    "description": "Payment date",
                    "type": "string",
                    "format": "date"
                },
                "entry": {
                    "description": "Journal entry",
                    "type": "string",
                    "example": "debit"
                },
                "description": {
                    "description": "Payment description",
                    "type": "string",
                    "example": "string"
                },
                "payee_id": {
                    "description": "Customer or Venor id",
                    "type": "number",
                    "example": "10"
                },
                "payee_type": {
                    "description": "Type of the payee. Customer or Vendor",
                    "type": "string",
                    "example": "Customer"
                },
                "branch_id": {
                    "description": "Payment branch id",
                    "type": "number",
                    "example": "1"
                },
                "ref_num": {
                    "description": "Official receipt number",
                    "type": "string",
                    "example": "OR1101"
                },
                "created_at": {
                    "description": "Payment created data",
                    "type": "string",
                    "format": "date"
                }
            },
            "type": "object"
        },
        "DeleteSalePaymentSuccess": {
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "updated": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Payment make successfully."
                },
                "data": {
                    "$ref": "#/definitions/savedSale"
                }
            },
            "type": "object"
        },
        "StatementOfAccountListSuccess": {
            "properties": {
                "total_debit": {
                    "description": "Total debit of chart of account",
                    "type": "number",
                    "example": "3000.00"
                },
                "total_credit": {
                    "description": "Total credit of chart of account",
                    "type": "number",
                    "example": "1000.00"
                },
                "date": {
                    "description": "Statement of account start date",
                    "type": "string",
                    "example": "2015-01-01"
                },
                "total": {
                    "description": "Total records in this statement of account",
                    "type": "integer",
                    "example": "130"
                },
                "per_page": {
                    "description": "Max records per page",
                    "type": "integer",
                    "example": "1"
                },
                "current_page": {
                    "description": "Current page number",
                    "type": "integer",
                    "example": "1"
                },
                "last_page": {
                    "description": "Last page number",
                    "type": "integer",
                    "example": "3"
                },
                "from": {
                    "description": "From records of current page",
                    "type": "integer",
                    "example": "50"
                },
                "to": {
                    "description": "To records of current page",
                    "type": "integer",
                    "example": "100"
                },
                "data": {
                    "$ref": "#/definitions/statementOfAccountData"
                }
            },
            "type": "object"
        },
        "statementOfAccountData": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer",
                    "example": "19990"
                },
                "desc": {
                    "description": "Statemnt of account description",
                    "type": "string",
                    "example": "System - Payment Received: Eliese"
                },
                "payeed_id": {
                    "description": "Customer ID",
                    "type": "string",
                    "example": "102"
                },
                "type": {
                    "description": "Type",
                    "type": "string",
                    "example": "sale_pay"
                },
                "debit": {
                    "description": "Debit",
                    "type": "number",
                    "example": "0.00"
                },
                "credit": {
                    "description": "Credit",
                    "type": "number",
                    "example": "40.00"
                },
                "journal_id": {
                    "description": "Journal ID",
                    "type": "integer",
                    "example": "9000"
                },
                "created_at": {
                    "description": "Created at",
                    "type": "string",
                    "example": "2019-05-13T07:10:00+08:00"
                },
                "code": {
                    "description": "Chart of account code",
                    "type": "integer",
                    "example": "503"
                },
                "coa_name": {
                    "description": "Chart of account name",
                    "type": "string",
                    "example": "Accounts Receivable - Debtors"
                },
                "date": {
                    "description": "Statement of Account start date",
                    "type": "string",
                    "example": "1"
                },
                "ref_num": {
                    "description": "Invoice reference number or ID",
                    "type": "string",
                    "example": "INV230"
                },
                "item_type": {
                    "description": "Item type",
                    "type": "string",
                    "example": "trans"
                },
                "item_ref_id": {
                    "description": "Item reference ID",
                    "type": "integer",
                    "example": "809"
                }
            },
            "type": "object"
        },
        "AgingListSuccess": {
            "properties": {
                "enddate": {
                    "description": "End date of aging",
                    "type": "string",
                    "format": "date",
                    "example": "2019-06-01"
                },
                "interval": {
                    "description": "Aging interval",
                    "type": "integer",
                    "example": "30"
                },
                "max_cycle": {
                    "description": "Maximun aging cycle",
                    "type": "integer",
                    "example": "6"
                },
                "page": {
                    "description": "Page number",
                    "type": "integer",
                    "example": "1"
                },
                "stardate": {
                    "description": "Start date of aging",
                    "type": "string",
                    "format": "date",
                    "example": "2019-01-01"
                },
                "payee_id": {
                    "description": "Customer ID",
                    "type": "integer",
                    "example": "1230"
                },
                "payee_type": {
                    "description": "Example DEBTOR",
                    "type": "string",
                    "example": "DEBTOR"
                },
                "account_id": {
                    "description": "From records of current page",
                    "type": "integer",
                    "example": "1"
                },
                "is_coa": {
                    "description": "True",
                    "type": "boolean",
                    "example": "1"
                },
                "aging": {
                    "$ref": "#/definitions/agingData"
                }
            },
            "type": "object"
        },
        "agingData": {
            "properties": {
                "aging_0": {
                    "description": "Current",
                    "type": "number",
                    "example": "0.00"
                },
                "aging_1": {
                    "description": "30 Days",
                    "type": "number",
                    "example": "30.00"
                },
                "aging_2": {
                    "description": "60 Days",
                    "type": "number",
                    "example": "0.00"
                },
                "aging_3": {
                    "description": "90 Days",
                    "type": "number",
                    "example": "0.00"
                },
                "aging_4": {
                    "description": "120 Days",
                    "type": "number",
                    "example": "10.00"
                },
                "aging_5": {
                    "description": "150 Days",
                    "type": "number",
                    "example": "0.00"
                },
                "aging_6": {
                    "description": "180 Days+",
                    "type": "number",
                    "example": "0.00"
                }
            },
            "type": "object"
        },
        "apiLogin": {
            "required": [
                "name, password"
            ],
            "properties": {
                "name": {
                    "description": "Username for login",
                    "type": "string",
                    "example": "Biztory"
                },
                "password": {
                    "description": "Firstly, concatinate username and Api-key to generate encrypted APi-key `(Eg: username = Biztory, Api-key = XXXXX, after concat = BiztoryXXXXX)`. Secondly, pass the concatinated string `(Eg: BiztoryXXXXX)` to encrypt using MD5. Thirdly, concatinate output of encryption from step 2 with user_ID and this will be your password `(Eg: user_ID = 1, encryption output = md5_output, after concat = 1_md5_output)`",
                    "type": "string",
                    "example": "1_md5_output"
                }
            },
            "type": "object"
        },
        "LoginSuccess": {
            "type": "object"
        },
        "apiLogout": {
            "required": [
                "name",
                "api_key"
            ],
            "type": "object"
        },
        "LogoutSuccess": {
            "type": "object"
        },
        "getVendorSuccess": {
            "properties": {
                "total": {
                    "type": "number",
                    "example": "8"
                },
                "per_page": {
                    "type": "number",
                    "example": "50"
                },
                "current_page": {
                    "type": "number",
                    "example": "1"
                },
                "last_page": {
                    "type": "number",
                    "example": "1"
                },
                "from": {
                    "type": "number",
                    "example": "1"
                },
                "to": {
                    "type": "number",
                    "example": "8"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/getVendor"
                    }
                }
            },
            "type": "object"
        },
        "newAccount": {
            "required": [
                "name",
                "type"
            ],
            "properties": {
                "name": {
                    "description": "Name of the wallet",
                    "type": "string",
                    "example": "Maybank"
                },
                "desc": {
                    "description": "Description of your wallet",
                    "type": "string"
                },
                "in_cashflow": {
                    "description": "Determine if to include this wallet into cashflow calculation. (No=0, Yes=1)",
                    "type": "boolean",
                    "example": true
                },
                "reconcilable": {
                    "description": "Determine if this wallet is available for reconcilation. (No=0, Yes=1)",
                    "type": "boolean",
                    "example": true
                },
                "type": {
                    "description": "Type of this wallet. Valid input:*cash, bank, others*.",
                    "type": "string",
                    "example": true
                },
                "coa": {
                    "description": "Chart of Account ID that associated with this Wallet",
                    "type": "integer"
                },
                "bank_id": {
                    "description": "Bank ID that associated with this Wallet if the type is *bank*",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "savedAccount": {
            "properties": {
                "id": {
                    "description": "Wallet ID",
                    "type": "integer",
                    "example": "1"
                },
                "coa": {
                    "description": "Chart of Account ID that associated with this Wallet",
                    "type": "integer"
                }
            },
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/newAccount"
                }
            ]
        },
        "AccountType": {
            "properties": {
                "id": {
                    "description": "Account Type ID",
                    "type": "integer",
                    "example": "1"
                },
                "name": {
                    "description": "Name of the account type",
                    "type": "string",
                    "example": "Capital"
                },
                "new_code": {
                    "description": "next sequence code for selected account type",
                    "type": "string",
                    "example": "103001"
                }
            },
            "type": "object"
        },
        "bank": {
            "properties": {
                "id": {
                    "description": "Bank ID",
                    "type": "integer",
                    "example": "1"
                },
                "name": {
                    "description": "Bank Name",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "CustomField": {
            "required": [
                "key",
                "value"
            ],
            "properties": {
                "key": {
                    "description": "Custom field identifier",
                    "type": "string",
                    "example": "Order No."
                },
                "value": {
                    "description": "Custom field value",
                    "type": "string",
                    "example": "W201604019"
                },
                "printable": {
                    "description": "Determine if this custom field will be visible in invoice printout",
                    "type": "boolean",
                    "example": true
                }
            },
            "type": "object"
        },
        "Discount": {
            "required": [
                "label",
                "value",
                "shown",
                "total",
                "tax",
                "tax_amt"
            ],
            "properties": {
                "shown": {
                    "description": "Determine if it is enabled",
                    "type": "boolean",
                    "example": true
                },
                "label": {
                    "description": "Determine which mode is being use. \"%\" for percentile, \"MYR\" for absolute amount",
                    "type": "string",
                    "example": "%"
                },
                "value": {
                    "description": "Applied value for the given label. If 20% is applied, insert 20",
                    "type": "number",
                    "example": "20"
                },
                "total": {
                    "description": "Total charges apply to invoice based on value",
                    "type": "number",
                    "example": "40.02"
                },
                "tax": {
                    "description": "SST or GST(gst) tax in decimal value",
                    "type": "number",
                    "example": "0.06"
                },
                "tax_amt": {
                    "description": "Total SST or GST(gst_amt) imposed based on value",
                    "type": "number",
                    "example": "2.40"
                }
            },
            "type": "object"
        },
        "ServiceCharge": {
            "required": [
                "label",
                "value",
                "shown",
                "total",
                "tax",
                "tax_amt"
            ],
            "properties": {
                "shown": {
                    "description": "Determine if it is enabled",
                    "type": "boolean",
                    "example": true
                },
                "label": {
                    "description": "Determine which mode is being use. \"%\" for percentile, \"MYR\" for absolute amount",
                    "type": "string",
                    "example": "%"
                },
                "value": {
                    "description": "Applied value for the given label. If 20% is applied, insert 20",
                    "type": "number",
                    "example": "20"
                },
                "total": {
                    "description": "Total charges apply to invoice based on value",
                    "type": "number",
                    "example": "32.02"
                },
                "tax": {
                    "description": "SST or GST(gst) tax in decimal value",
                    "type": "number",
                    "example": "0.06"
                },
                "tax_amt": {
                    "description": "Total SST or GST(gst_amt) imposed based on value",
                    "type": "number",
                    "example": "1.92"
                }
            },
            "type": "object"
        },
        "Address": {
            "properties": {
                "addr": {
                    "description": "Address line of your shipping address",
                    "type": "string",
                    "example": "No. 1, Jalan Berjaya"
                },
                "city": {
                    "description": "City of your shipping address",
                    "type": "string",
                    "example": "Petaling Jaya"
                },
                "state": {
                    "description": "State of your shipping address",
                    "type": "string",
                    "example": "Selangor"
                },
                "zipcode": {
                    "description": "Zipcode of your shipping address",
                    "type": "string",
                    "example": "47180"
                }
            }
        },
        "BillingAddress": {
            "properties": {
                "billing_addr": {
                    "description": "Address line of your billing address",
                    "type": "string",
                    "example": "No. 1, Jalan Berjaya"
                },
                "billing_city": {
                    "description": "City of your billing address",
                    "type": "string",
                    "example": "Petaling Jaya"
                },
                "billing_state": {
                    "description": "State of your billing address",
                    "type": "string",
                    "example": "Selangor"
                },
                "billing_zipcode": {
                    "description": "Zipcode of your billing address",
                    "type": "string",
                    "example": "47180"
                }
            }
        },
        "Tax": {
            "required": [
                "before_tax",
                "tax",
                "after_tax",
                "tax_code",
                "tax_rate"
            ],
            "properties": {
                "before_tax": {
                    "description": "Amount excluding tax",
                    "type": "number",
                    "example": "192.12"
                },
                "tax": {
                    "description": "Tax amount",
                    "type": "number",
                    "example": "11.53"
                },
                "after_tax": {
                    "description": "Amount including tax",
                    "type": "number",
                    "example": "203.65"
                },
                "tax_code": {
                    "description": "Tax codes (GST or SST). Available SST tax codes are SST-0, SST-5, SST-6, SST-10, SST-ES",
                    "type": "string",
                    "example": "SST-6"
                },
                "tax_rate": {
                    "description": "tax rate in decimal value",
                    "type": "number",
                    "example": "0.06"
                }
            },
            "type": "object"
        },
        "insertBranch": {
            "properties": {
                "id": {
                    "description": "ID of the branch applied",
                    "type": "integer",
                    "example": 1
                }
            },
            "type": "object"
        },
        "BranchProduct": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer",
                    "example": "1"
                },
                "branch_id": {
                    "description": "Branch ID",
                    "type": "integer",
                    "example": "1"
                },
                "product_id": {
                    "description": "Product ID",
                    "type": "integer",
                    "example": "1"
                },
                "available_stock": {
                    "description": "Available stock balance",
                    "type": "number",
                    "example": "1"
                },
                "in_stock": {
                    "description": "Current stock balance",
                    "type": "number"
                },
                "selling_price": {
                    "description": "Selling price",
                    "type": "number",
                    "example": "10.00"
                },
                "avg_cost": {
                    "description": "Average cost",
                    "type": "number",
                    "example": "11.00"
                }
            },
            "type": "object"
        },
        "newChartOfAccount": {
            "required": [
                "name",
                "code",
                "account_type_id"
            ],
            "properties": {
                "name": {
                    "description": "chart of account name",
                    "type": "string"
                },
                "code": {
                    "description": "chart of account unique identifier code",
                    "type": "string"
                },
                "desc": {
                    "description": "description about chart of account",
                    "type": "string"
                },
                "account_type_id": {
                    "description": "account type ID",
                    "type": "integer",
                    "example": "1"
                }
            },
            "type": "object"
        },
        "savedChartOfAccount": {
            "properties": {
                "id": {
                    "description": "chart of account ID",
                    "type": "integer",
                    "example": "1"
                },
                "name": {
                    "description": "chart of account name",
                    "type": "string"
                },
                "code": {
                    "description": "chart of account unique identifier code",
                    "type": "string"
                },
                "desc": {
                    "description": "description about chart of account",
                    "type": "string"
                },
                "account_type_id": {
                    "description": "account type ID",
                    "type": "integer",
                    "example": "1"
                }
            },
            "type": "object"
        },
        "ChartOfAccount": {
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "description": "chart of account ID",
                    "type": "integer",
                    "example": "1"
                },
                "name": {
                    "description": "chart of account name",
                    "type": "string",
                    "example": "Account Receivable"
                },
                "code": {
                    "description": "chart of account unique identifier code",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "GetChartOfAccountByCode": {
            "properties": {
                "id": {
                    "description": "chart of account ID",
                    "type": "integer",
                    "example": "1"
                },
                "name": {
                    "description": "chart of account name",
                    "type": "string",
                    "example": "Account Receivable"
                },
                "code": {
                    "description": "chart of account unique identifier code",
                    "type": "string"
                },
                "desc": {
                    "description": "chart of account Description",
                    "type": "string"
                },
                "account_type_id": {
                    "description": "Account type id",
                    "type": "integer",
                    "example": "1"
                },
                "account_type": {
                    "$ref": "#/definitions/AccountType"
                }
            },
            "type": "object"
        },
        "Payee": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Payee ID",
                    "type": "integer",
                    "example": "1"
                },
                "name": {
                    "description": "Payee name",
                    "type": "string",
                    "example": "John Doe"
                }
            },
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/BillingAddress"
                },
                {
                    "$ref": "#/definitions/Address"
                }
            ]
        },
        "getCustomer": {
            "properties": {
                "id": {
                    "description": "Customer ID",
                    "type": "integer",
                    "example": "1"
                },
                "name": {
                    "description": "Customer name",
                    "type": "string",
                    "example": "John"
                },
                "addr": {
                    "description": "Shipping address",
                    "type": "string",
                    "example": "No. 1, Jalan Berjaya, Petaling Jaya, 47180 Selangor"
                },
                "zip": {
                    "description": "Shipping zipcode",
                    "type": "string",
                    "example": "53000"
                },
                "city": {
                    "description": "Shipping city",
                    "type": "string",
                    "example": "Ptaling Jaya"
                },
                "state": {
                    "description": "Shipping state",
                    "type": "string",
                    "example": "Selangor"
                },
                "country": {
                    "description": "Shipping country",
                    "type": "string",
                    "example": "Malaysia"
                },
                "phone": {
                    "description": "Contact number",
                    "type": "number",
                    "example": "01100000000"
                },
                "email": {
                    "description": "Email ddress",
                    "type": "string",
                    "example": "example@gmail.com"
                },
                "billing_addr": {
                    "description": "Billing address",
                    "type": "string",
                    "example": "No. 1, Jalan Berjaya, Petaling Jaya, 47180 Selangor"
                },
                "billing_zip": {
                    "description": "Billing zipcode",
                    "type": "string",
                    "example": "53000"
                },
                "billing_city": {
                    "description": "Billing city",
                    "type": "string",
                    "example": "Ptaling Jaya"
                },
                "billing_state": {
                    "description": "Billing state",
                    "type": "string",
                    "example": "Selangor"
                },
                "billing_country": {
                    "description": "Billing country",
                    "type": "string",
                    "example": "Malaysia"
                },
                "remark": {
                    "description": "Remark for additional information",
                    "type": "string"
                },
                "attn": {
                    "description": "Attn",
                    "type": "string"
                },
                "fax": {
                    "description": "Fax number",
                    "type": "string"
                },
                "payment_term": {
                    "description": "Payment term",
                    "type": "string"
                },
                "identification_number": {
                    "description": "IC number",
                    "type": "string"
                },
                "shipping_attn": {
                    "description": "Shipping attn",
                    "type": "string"
                }
            },
            "type": "object"
        },
        "newCustomer": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "Customer name",
                    "type": "string",
                    "example": "John Doe"
                },
                "email": {
                    "description": "Customer email",
                    "type": "string",
                    "example": "jogn@gmail.com"
                },
                "phone": {
                    "description": "Customer contact number",
                    "type": "number",
                    "example": "0123456789"
                },
                "billing_addr": {
                    "description": "Billing address",
                    "type": "string",
                    "example": "Jalan Berjaya"
                },
                "billing_zip": {
                    "description": "Billing zip",
                    "type": "number",
                    "example": "84000"
                },
                "billing_city": {
                    "description": "Billing city",
                    "type": "string",
                    "example": "Muar"
                },
                "billing_state": {
                    "description": "Billing state",
                    "type": "string",
                    "example": "Johor"
                },
                "addr": {
                    "description": "Shipping address",
                    "type": "string",
                    "example": "Jalan Berjaya"
                },
                "zip": {
                    "description": "Shipping zip",
                    "type": "number",
                    "example": "84000"
                },
                "city": {
                    "description": "Shipping city",
                    "type": "string",
                    "example": "Muar"
                },
                "state": {
                    "description": "Shipping state",
                    "type": "string",
                    "example": "Johor"
                }
            },
            "type": "object"
        },
        "CustomerStoreSuccess": {
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "created": {
                    "type": "boolean",
                    "example": true
                },
                "updated": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Successfully updated Object!"
                },
                "data": {
                    "$ref": "#/definitions/savedCustomer"
                }
            },
            "type": "object"
        },
        "savedCustomer": {
            "properties": {
                "id": {
                    "description": "Customer ID",
                    "type": "integer",
                    "example": "1"
                },
                "name": {
                    "description": "Customer name",
                    "type": "String",
                    "example": "John Doe"
                },
                "billing_addr": {
                    "description": "Billing address",
                    "type": "string",
                    "example": ""
                },
                "billing_city": {
                    "description": "Billing city",
                    "type": "string",
                    "example": "Muar"
                },
                "billing_state": {
                    "description": "Billing state",
                    "type": "string",
                    "example": "Johor"
                },
                "billing_zip": {
                    "description": "Billing zip",
                    "type": "string",
                    "example": "84000"
                },
                "addr": {
                    "description": "Shipping address",
                    "type": "string",
                    "example": "Jalan Berjaya"
                },
                "city": {
                    "description": "Shipping city",
                    "type": "string",
                    "example": "Muar"
                },
                "state": {
                    "description": "Shipping state",
                    "type": "string",
                    "example": "Johor"
                },
                "zip": {
                    "description": "Shipping zip",
                    "type": "string",
                    "example": "84000"
                }
            },
            "type": "object"
        },
        "newExpense": {
            "required": [
                "invoice_date",
                "gst_supply_date",
                "payee",
                "amount",
                "items",
                "payment_term",
                "terms"
            ],
            "properties": {
                "ref_num": {
                    "description": "Ref num of the bill. If not provided, system will auto generate the next running num",
                    "type": "string",
                    "example": "PV0001"
                },
                "invoice_date": {
                    "description": "Bill date",
                    "type": "string",
                    "format": "date"
                },
                "gst_supply_date": {
                    "description": "GST Supply Date. If GST is not enabled, assign with your Bill date value",
                    "type": "string",
                    "format": "date"
                },
                "payee": {
                    "description": "Payee name. Accept *object* in format `{id: VENDOR_ID, name: VENDOR_NAME}` to associate with an existing Vendor object.",
                    "type": "string",
                    "example": "John Doe"
                },
                "amount": {
                    "description": "Total amount paid",
                    "type": "number",
                    "example": "200.00"
                },
                "items": {
                    "description": "bill's line items detail",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/newExpense_item"
                    }
                },
                "recurring": {
                    "description": "Enable recurring feature for the invoice",
                    "$ref": "#/definitions/Recurring"
                },
                "customField": {
                    "description": "expense custom field",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomField"
                    }
                },
                "methods": {
                    "description": "payment method(s) of this invoice",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PaymentMethod"
                    }
                },
                "is_gst": {
                    "description": "Determine if this bill is subject to GST",
                    "type": "boolean",
                    "example": 1
                },
                "is_invoice": {
                    "description": "Determine if this invoice is receipt or invoice. (Receipt=0, Invoice=1)",
                    "type": "boolean",
                    "example": 0
                },
                "tax_inclusive": {
                    "description": "[GST] Determine if this invoice is tax inclusive",
                    "type": "boolean",
                    "example": 1
                },
                "payment_term": {
                    "description": "payment term applied for this invoice",
                    "$ref": "#/definitions/PaymentTerm"
                },
                "terms": {
                    "description": "payment term schedule table for this invoice",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PaymentTerm_item"
                    }
                }
            },
            "type": "object"
        },
        "savedExpense": {
            "properties": {
                "id": {
                    "description": "Expense ID",
                    "type": "integer",
                    "example": "1"
                },
                "gst_supply_date": {
                    "type": "string",
                    "format": "date"
                },
                "invoice_date": {
                    "type": "string",
                    "format": "date"
                },
                "due": {
                    "description": "Amount due",
                    "type": "number"
                },
                "paid": {
                    "description": "Amount paid",
                    "type": "number"
                },
                "total": {
                    "description": "Total bill amount",
                    "type": "number"
                },
                "payee": {
                    "description": "Vendor name",
                    "type": "string"
                },
                "payee_id": {
                    "description": "Vendor ID",
                    "type": "integer"
                },
                "payment_status": {
                    "description": "Indicate if the bill is fully paid. 1=Fully Paid, 0=Overdue",
                    "type": "boolean"
                },
                "payment_term": {
                    "type": "string"
                },
                "ref_num": {
                    "description": "Bill ref num",
                    "type": "string",
                    "example": "PV0001"
                },
                "rounding": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "newExpense_item": {
            "required": [
                "qty",
                "price",
                "total",
                "total_tax",
                "product"
            ],
            "properties": {
                "price": {
                    "description": "Item's unit price",
                    "type": "number",
                    "example": "200.00"
                },
                "tax_label": {
                    "description": "Item's GST tax code. If not provided, default GST supply tax code will be used",
                    "type": "string",
                    "example": "SR"
                },
                "tax_value": {
                    "description": "Item's GST tax value in decimal value. If not provided, default GST supply tax value will be used",
                    "type": "number",
                    "example": "0.06"
                },
                "item_id": {
                    "description": "Product ID associated with this invoice item",
                    "type": "integer",
                    "example": 729000
                },
                "total": {
                    "description": "Total sum of this invoice item",
                    "type": "number",
                    "example": "212.00"
                },
                "total_tax": {
                    "description": "GST total sum of this invoice item",
                    "type": "number",
                    "example": "12.00"
                },
                "unit": {
                    "description": "Unit measurement of this invoice item",
                    "type": "string",
                    "example": "pcs"
                },
                "code": {
                    "description": "Product SKU/code",
                    "type": "string",
                    "example": "Medical Expenses"
                },
                "description": {
                    "description": "Invoice item description",
                    "type": "string",
                    "example": "Sample Product 1"
                }
            },
            "type": "object"
        },
        "savedExpense_item": {
            "properties": {
                "id": {
                    "description": "Sale_item ID",
                    "type": "integer",
                    "example": "1"
                },
                "price": {
                    "description": "Item's unit price",
                    "type": "number",
                    "example": "200.00"
                },
                "tax_label": {
                    "description": "Item's GST tax code. If not provided, default GST supply tax code will be used",
                    "type": "string",
                    "example": "SR"
                },
                "tax_value": {
                    "description": "Item's GST tax value in decimal value. If not provided, default GST supply tax value will be used",
                    "type": "number",
                    "example": "0.06"
                },
                "item_id": {
                    "description": "Product ID associated with this invoice item",
                    "type": "integer",
                    "example": "1"
                },
                "sale_id": {
                    "description": "Sale Invoice ID associated with this invoice item",
                    "type": "integer",
                    "example": "1"
                },
                "unit": {
                    "description": "Unit measurement of this invoice item",
                    "type": "string",
                    "example": "pcs"
                },
                "code": {
                    "description": "Product SKU/code",
                    "type": "string",
                    "example": "Medical Expenses"
                },
                "description": {
                    "description": "Invoice item description",
                    "type": "string",
                    "example": "Sample Product 1"
                }
            },
            "type": "object"
        },
        "SupplyGst": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Unique identifier of the GST tax code",
                    "type": "integer",
                    "example": 13
                },
                "name": {
                    "description": "GST tax code label",
                    "type": "string",
                    "example": "SR"
                },
                "value": {
                    "description": "GST tax code value in decimal",
                    "type": "number",
                    "example": "0.06"
                }
            },
            "type": "object"
        },
        "PurchaseGst": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Unique identifier of the GST tax code",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "GST tax code label",
                    "type": "string",
                    "example": "TX"
                },
                "value": {
                    "description": "GST tax code value in decimal",
                    "type": "number",
                    "example": "0.06"
                }
            },
            "type": "object"
        },
        "newJournal_item": {
            "required": [
                "chart_of_account",
                "debit",
                "credit"
            ],
            "properties": {
                "debit": {
                    "description": "debit side amount",
                    "type": "number",
                    "example": "100.00"
                },
                "credit": {
                    "description": "credit side amount",
                    "type": "number",
                    "example": "100.00"
                },
                "payee_id": {
                    "description": "payee ID associated with this journal item",
                    "type": "integer"
                },
                "desc": {
                    "description": "journal item description",
                    "type": "string",
                    "example": "Cash sale"
                },
                "chart_of_account": {
                    "description": "chart of account for this journal item",
                    "$ref": "#/definitions/ChartOfAccount"
                }
            },
            "type": "object"
        },
        "savedJournal_item": {
            "properties": {
                "id": {
                    "description": "journal item ID",
                    "type": "integer",
                    "example": "1"
                },
                "journal_id": {
                    "description": "journal ID",
                    "type": "integer",
                    "example": "1"
                },
                "debit": {
                    "description": "debit side amount",
                    "type": "number",
                    "example": "100.00"
                },
                "credit": {
                    "description": "credit side amount",
                    "type": "number",
                    "example": "100.00"
                },
                "payee_id": {
                    "description": "payee ID associated with this journal item",
                    "type": "integer"
                },
                "chart_of_account_id": {
                    "description": "chart of account ID associated with this journal item",
                    "type": "integer"
                },
                "desc": {
                    "description": "journal item description",
                    "type": "string",
                    "example": "Cash sale"
                }
            },
            "type": "object"
        },
        "newJournal": {
            "required": [
                "date",
                "items"
            ],
            "properties": {
                "date": {
                    "description": "journal date",
                    "type": "string",
                    "format": "date"
                },
                "desc": {
                    "description": "journal general description",
                    "type": "string"
                },
                "ref_num": {
                    "type": "string"
                },
                "items": {
                    "description": "journal items detail",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/newJournal_item"
                    }
                }
            },
            "type": "object"
        },
        "savedJournal": {
            "properties": {
                "id": {
                    "description": "journal ID",
                    "type": "integer",
                    "example": "1"
                },
                "branch_id": {
                    "description": "branch ID",
                    "type": "integer",
                    "example": "1"
                },
                "date": {
                    "type": "string",
                    "format": "date"
                },
                "desc": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "PaymentMethod": {
            "required": [
                "id",
                "name",
                "amount"
            ],
            "properties": {
                "id": {
                    "description": "Payment Method ID",
                    "type": "integer",
                    "example": "1"
                },
                "name": {
                    "description": "Payment Method name",
                    "type": "string",
                    "example": "Cash"
                },
                "amount": {
                    "description": "Amount payable with this method",
                    "type": "number",
                    "example": "200.00"
                }
            },
            "type": "object"
        },
        "newPaymentMethod": {
            "required": [
                "name",
                "account_id",
                "type"
            ],
            "properties": {
                "name": {
                    "description": "Name of the payment method",
                    "type": "string",
                    "example": "Online Transfer"
                },
                "account_id": {
                    "description": "Account ID that is associated with this Payment Method",
                    "type": "integer",
                    "example": "2"
                },
                "type": {
                    "description": "Type of this payment method. Valid input:*payable, receivable, transfer*.",
                    "type": "string",
                    "example": "receivable"
                }
            },
            "type": "object"
        },
        "savedPaymentMethod": {
            "properties": {
                "id": {
                    "description": "Payment Method ID",
                    "type": "integer",
                    "example": "1"
                }
            },
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/newPaymentMethod"
                }
            ]
        },
        "PaymentTerm": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "ID of the payment term applied",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "Name of the payment term applied",
                    "type": "string",
                    "example": "Cash"
                }
            },
            "type": "object"
        },
        "PaymentTerm_item": {
            "required": [
                "date",
                "amount"
            ],
            "properties": {
                "date": {
                    "description": "Date when this term is due. If Cash term is applied, this date should be same as the invoice date",
                    "type": "string",
                    "format": "date"
                },
                "amount": {
                    "description": "Amount due for payment when the term is arrived. If Cash term is applied, this amount should be same as invoice total",
                    "type": "number",
                    "example": "203.70"
                }
            },
            "type": "object"
        },
        "basicProduct": {
            "properties": {
                "sku": {
                    "description": "Unique identifier of the product",
                    "type": "string",
                    "example": "PROD001"
                },
                "name": {
                    "description": "Product name",
                    "type": "string",
                    "example": "Test Product"
                },
                "is_supply": {
                    "description": "Determine if this product is for sale",
                    "type": "boolean",
                    "example": 1
                },
                "supply_gst": {
                    "description": "Object that contains info about product's supply GST",
                    "$ref": "#/definitions/SupplyGst"
                },
                "is_purchase": {
                    "description": "Determine if this product is for purchase",
                    "type": "boolean",
                    "example": 1
                },
                "purchase_gst": {
                    "description": "Object that contains info about product's purchase GST",
                    "$ref": "#/definitions/PurchaseGst"
                },
                "selling_price": {
                    "description": "product selling price (excluding GST if any)",
                    "type": "number",
                    "example": "100.00"
                },
                "s_coa": {
                    "description": "Product sale chart of account number",
                    "type": "number",
                    "example": "8"
                },
                "p_coa": {
                    "description": "Product purchase chart of account number",
                    "type": "number",
                    "example": "5"
                }
            },
            "type": "object"
        },
        "ProductStock": {
            "properties": {
                "branch": {
                    "description": "Branch level stock details",
                    "$ref": "#/definitions/BranchProduct"
                }
            },
            "type": "object"
        },
        "newProduct": {
            "required": [
                "sku",
                "name"
            ],
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/basicProduct"
                }
            ]
        },
        "savedProduct": {
            "properties": {
                "id": {
                    "description": "Product ID",
                    "type": "integer",
                    "example": "1"
                }
            },
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/newProduct"
                }
            ]
        },
        "getProductSuccess": {
            "properties": {
                "total": {
                    "type": "number",
                    "example": "349"
                },
                "per_page": {
                    "type": "number",
                    "example": "50"
                },
                "current_page": {
                    "type": "number",
                    "example": "1"
                },
                "last_page": {
                    "type": "number",
                    "example": "7"
                },
                "from": {
                    "type": "number",
                    "example": "1"
                },
                "to": {
                    "type": "number",
                    "example": "3"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/getProduct"
                    }
                }
            },
            "type": "object"
        },
        "getProduct": {
            "properties": {
                "id": {
                    "description": "Product ID",
                    "type": "integer",
                    "example": "1"
                },
                "sku": {
                    "description": "Product code",
                    "type": "string",
                    "example": "ICOPICBRN-8.00"
                },
                "name": {
                    "description": "Product name",
                    "type": "string",
                    "example": "ICOLORIS PICTORIS BROWN-8.00"
                },
                "decription": {
                    "description": "Product description",
                    "type": "string",
                    "example": "product 123"
                },
                "selling_price": {
                    "description": "Product selling price",
                    "type": "string",
                    "example": "11.00"
                },
                "in_stock": {
                    "description": "Stokc of product",
                    "type": "string",
                    "example": "1"
                },
                "min_stock_level": {
                    "description": "Minimum stock level",
                    "type": "string",
                    "example": "1"
                },
                "thumbnail": {
                    "description": "Product image path",
                    "type": "string"
                },
                "vendors": {
                    "description": "Product vendor",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/getProductVendor"
                    }
                },
                "customers": {
                    "description": "Product vendor",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/getProductCustomer"
                    }
                }
            },
            "type": "object"
        },
        "getProductVendor": {
            "properties": {
                "id": {
                    "description": "Vendor ID",
                    "type": "integer",
                    "example": "1"
                },
                "name": {
                    "description": "Vendor name",
                    "type": "string",
                    "example": "John"
                },
                "pivot": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/vendorPivot"
                    }
                }
            },
            "type": "object"
        },
        "vendorPivot": {
            "properties": {
                "product_id": {
                    "description": "Product ID",
                    "type": "integer",
                    "example": "1"
                },
                "vendor_id": {
                    "description": "Vendor ID",
                    "type": "string",
                    "example": "1"
                },
                "cost_price": {
                    "description": "Price brought from supplier",
                    "type": "number",
                    "example": "10.00"
                }
            },
            "type": "object"
        },
        "getProductCustomer": {
            "properties": {
                "id": {
                    "description": "Customer ID",
                    "type": "integer",
                    "example": "1"
                },
                "name": {
                    "description": "Customer name",
                    "type": "string",
                    "example": "John"
                },
                "pivot": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/customerPivot"
                    }
                }
            },
            "type": "object"
        },
        "customerPivot": {
            "properties": {
                "product_id": {
                    "description": "Product ID",
                    "type": "integer",
                    "example": "1"
                },
                "customer_id": {
                    "description": "Customer ID",
                    "type": "string",
                    "example": "1"
                },
                "cost_price": {
                    "description": "Price sold to customer",
                    "type": "number",
                    "example": "50.00"
                }
            },
            "type": "object"
        },
        "newPurchase": {
            "required": [
                "invoice_date",
                "gst_supply_date",
                "total",
                "grandTotal",
                "amount",
                "items",
                "payment_term",
                "terms"
            ],
            "properties": {
                "ref_num": {
                    "description": "Ref num of the invoice. If not provided, system will auto generate the next running num",
                    "type": "string",
                    "example": "INV0001"
                },
                "invoice_date": {
                    "description": "Invoice date",
                    "type": "string",
                    "format": "date"
                },
                "gst_supply_date": {
                    "description": "GST Supply Date. If GST is not enabled, assign with your Invoice date value",
                    "type": "string",
                    "format": "date"
                },
                "delivery_date": {
                    "description": "Delivery Date",
                    "type": "string",
                    "format": "date"
                },
                "payee": {
                    "description": "Supplier name. Accept *object* in format `{id: SUPPLIER_ID, name: AUPPLIER_NAME}` to associate with an existing Supplier object.",
                    "type": "string",
                    "example": "John Doe"
                },
                "total": {
                    "description": "Total invoice amount (including GST or SST if any)",
                    "type": "number",
                    "example": 94.5
                },
                "grandTotal": {
                    "description": "Same as \"total\"",
                    "type": "number",
                    "example": 94.5
                },
                "amount": {
                    "description": "Total amount paid",
                    "type": "number",
                    "example": 0
                },
                "items": {
                    "description": "invoice items detail",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/newPurchase_item"
                    }
                },
                "recurring": {
                    "description": "Enable recurring feature for the invoice",
                    "$ref": "#/definitions/Recurring"
                },
                "customField": {
                    "description": "invoice custom field",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomField"
                    }
                },
                "methods": {
                    "description": "payment method(s) of this invoice",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PaymentMethod"
                    }
                },
                "is_gst": {
                    "description": "Determine if this invoice is subject to GST",
                    "type": "boolean",
                    "example": 0
                },
                "is_sst": {
                    "description": "Determine if this invoice is subject to SST",
                    "type": "boolean",
                    "example": 1
                },
                "is_receipt": {
                    "description": "Determine if this invoice is receipt or invoice. (Receipt=1, Invoice=0)",
                    "type": "boolean",
                    "example": 0
                },
                "tax_inclusive": {
                    "description": "[GST] or [SST] Determine if this invoice is tax inclusive",
                    "type": "boolean",
                    "example": 0
                },
                "not_mixed_supply": {
                    "description": "[GST] or [SST] Determine if this invoice is mixed supply",
                    "type": "boolean",
                    "default": 1
                },
                "discount": {
                    "description": "discount given on this invoice",
                    "$ref": "#/definitions/Purchase_Discount"
                },
                "service_charge": {
                    "description": "service charge imposed on this invoice",
                    "$ref": "#/definitions/Purchase_ServiceCharge"
                },
                "tax": {
                    "description": "tax imposed on this invoice",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tax"
                    }
                },
                "email": {
                    "description": "Customer email address",
                    "type": "string",
                    "format": "email",
                    "example": "customer@email.com"
                },
                "attn": {
                    "description": "\"Attn to\" field in invoice",
                    "type": "string"
                },
                "phone": {
                    "description": "Customer phone number",
                    "type": "string"
                },
                "author_id": {
                    "description": "Owner ID associated with this invoice",
                    "type": "integer",
                    "default": "Same as Act As User ID",
                    "example": 2
                },
                "payment_term": {
                    "description": "payment term applied for this invoice",
                    "$ref": "#/definitions/PaymentTerm"
                },
                "terms": {
                    "description": "payment term schedule table for this invoice",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Purchase_PaymentTerm_item"
                    }
                }
            },
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/BillingAddress"
                }
            ]
        },
        "Purchase_Discount": {
            "required": [
                "label",
                "value",
                "shown",
                "total",
                "tax",
                "tax_amt"
            ],
            "properties": {
                "shown": {
                    "description": "Determine if it is enabled",
                    "type": "boolean",
                    "example": true
                },
                "label": {
                    "description": "Determine which mode is being use. \"%\" for percentile, \"MYR\" for absolute amount",
                    "type": "string",
                    "example": "%"
                },
                "value": {
                    "description": "Applied value for the given label. If 10% is applied, insert 10",
                    "type": "number",
                    "example": 0
                },
                "total": {
                    "description": "Total charges apply to invoice based on value",
                    "type": "number",
                    "example": 0
                },
                "tax": {
                    "description": "SST tax in decimal value",
                    "type": "number",
                    "example": 0
                },
                "tax_amt": {
                    "description": "Total SST imposed based on value",
                    "type": "number",
                    "example": 0
                }
            },
            "type": "object"
        },
        "Purchase_ServiceCharge": {
            "required": [
                "label",
                "value",
                "shown",
                "total",
                "tax",
                "tax_amt"
            ],
            "properties": {
                "label": {
                    "description": "Determine which mode is being use. \"%\" for percentile, \"MYR\" for absolute amount",
                    "type": "string",
                    "example": "%"
                },
                "value": {
                    "description": "Applied value for the given label. If 10% is applied, insert 10",
                    "type": "number",
                    "example": 5
                },
                "total": {
                    "description": "Total charges apply to invoice based on value",
                    "type": "number",
                    "example": 4.5
                },
                "tax": {
                    "description": "SST tax in decimal value",
                    "type": "number",
                    "example": 0
                },
                "tax_amt": {
                    "description": "Total SST imposed based on value",
                    "type": "number",
                    "example": 0
                }
            },
            "type": "object"
        },
        "Purchase_Tax": {
            "required": [
                "before_tax",
                "tax",
                "after_tax",
                "tax_code",
                "tax_rate"
            ],
            "properties": {
                "before_tax": {
                    "description": "Amount excluding tax",
                    "type": "number",
                    "example": 94.5
                },
                "tax": {
                    "description": "Tax amount",
                    "type": "number",
                    "example": 0
                },
                "after_tax": {
                    "description": "Amount including tax",
                    "type": "number",
                    "example": 94.5
                },
                "tax_code": {
                    "description": "Tax codes (GST or SST). Available SST tax codes are SST-0, SST-5, SST-6, SST-10, SST-ES",
                    "type": "string",
                    "example": "SST-0"
                },
                "tax_rate": {
                    "description": "tax rate in decimal value",
                    "type": "number",
                    "example": 0
                }
            },
            "type": "object"
        },
        "Purchase_PaymentTerm_item": {
            "required": [
                "date",
                "amount"
            ],
            "properties": {
                "date": {
                    "description": "Date when this term is due. If Cash term is applied, this date should be same as the invoice date",
                    "type": "string",
                    "format": "date"
                },
                "amount": {
                    "description": "Amount due for payment when the term is arrived. If Cash term is applied, this amount should be same as invoice total",
                    "type": "number",
                    "example": 94.5
                }
            },
            "type": "object"
        },
        "PurchaseStoreSuccess": {
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "created": {
                    "type": "boolean",
                    "example": true
                },
                "updated": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Successfully updated Object!"
                },
                "data": {
                    "$ref": "#/definitions/savedPurchase"
                },
                "invoice_items": {
                    "description": "invoice items detail",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/savedPurchase_item"
                    }
                }
            },
            "type": "object"
        },
        "savedPurchase": {
            "properties": {
                "id": {
                    "description": "Invoice ID",
                    "type": "integer",
                    "example": "1"
                },
                "billing_addr": {
                    "description": "Jalan Berjaya",
                    "type": "string"
                },
                "billing_city": {
                    "description": "Muar",
                    "type": "string"
                },
                "billing_state": {
                    "description": "Johor",
                    "type": "string"
                },
                "billing_zip": {
                    "description": "84000",
                    "type": "string"
                },
                "gst_supply_date": {
                    "type": "string",
                    "format": "date"
                },
                "invoice_date": {
                    "type": "string",
                    "format": "date"
                },
                "delivery_date": {
                    "type": "string",
                    "format": "date"
                },
                "due": {
                    "description": "Amount due",
                    "type": "number"
                },
                "paid": {
                    "description": "Amount paid",
                    "type": "number"
                },
                "total": {
                    "description": "Total invoice amount",
                    "type": "number"
                },
                "payee": {
                    "description": "Supplier name",
                    "type": "string"
                },
                "payee_id": {
                    "description": "Supplier ID",
                    "type": "integer"
                },
                "payment_status": {
                    "description": "Indicate if the invoice is fully paid. 1=Fully Paid, 0=Overdue",
                    "type": "boolean"
                },
                "payment_term": {
                    "type": "string"
                },
                "ref_num": {
                    "description": "Invoice ref num",
                    "type": "string",
                    "example": "INV0001"
                },
                "rounding": {
                    "type": "number"
                }
            },
            "type": "object"
        },
        "PurchaseSearchSuccess": {
            "properties": {
                "id": {
                    "description": "Purchase ID",
                    "type": "integer",
                    "example": "1"
                },
                "ref_num": {
                    "description": "Invoice ID",
                    "type": "string",
                    "example": "INV0001"
                },
                "payee": {
                    "description": "User name",
                    "type": "string",
                    "example": "John"
                },
                "payee_id": {
                    "description": "User ID",
                    "type": "integer",
                    "example": "1"
                },
                "billing_addr": {
                    "description": "Jalan Berjaya",
                    "type": "string"
                },
                "billing_city": {
                    "description": "Muar",
                    "type": "string"
                },
                "billing_state": {
                    "description": "Johor",
                    "type": "string"
                },
                "billing_zip": {
                    "description": "84000",
                    "type": "string"
                },
                "gst_supply_date": {
                    "type": "string",
                    "format": "date"
                },
                "invoice_date": {
                    "type": "string",
                    "format": "date"
                },
                "delivery_date": {
                    "type": "string",
                    "format": "date"
                },
                "currency": {
                    "description": "Currency type",
                    "type": "string",
                    "example": "MYR"
                },
                "currency_total": {
                    "type": "number",
                    "format": "currency",
                    "example": "100.00"
                },
                "total": {
                    "type": "number",
                    "format": "currency",
                    "example": "100.00"
                },
                "payment_term": {
                    "description": "Payment term",
                    "type": "string",
                    "example": "Cash"
                },
                "delivery_status": {
                    "type": "boolean",
                    "example": "true"
                },
                "is_gst": {
                    "type": "boolean",
                    "example": "false"
                },
                "branch_id": {
                    "type": "integer",
                    "example": "1"
                },
                "locked": {
                    "type": "boolean",
                    "example": "false"
                },
                "author_id": {
                    "description": "User who created the purchase invoice",
                    "type": "integer",
                    "example": "1"
                },
                "purchase_order_id": {
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "newPurchase_item": {
            "required": [
                "qty",
                "price",
                "total",
                "total_tax",
                "product"
            ],
            "properties": {
                "qty": {
                    "description": "Item's quantity",
                    "type": "integer",
                    "minimum": 1,
                    "example": 1
                },
                "price": {
                    "description": "Item's unit price",
                    "type": "number",
                    "example": 100
                },
                "tax_label": {
                    "description": "Item's GST or SST tax code. If not provided, default GST or SST supply tax code will be used",
                    "type": "string",
                    "example": "SR"
                },
                "tax_value": {
                    "description": "Item's GST or SST tax value in decimal value. If not provided, default GST or SST supply tax value will be used",
                    "type": "number",
                    "example": "0.00"
                },
                "item_id": {
                    "description": "Product ID associated with this invoice item",
                    "type": "integer"
                },
                "total": {
                    "description": "Total sum of this invoice item",
                    "type": "number",
                    "example": 90
                },
                "total_tax": {
                    "description": "GST or SST total sum of this invoice item",
                    "type": "number",
                    "example": 0
                },
                "unit": {
                    "description": "Unit measurement of this invoice item",
                    "type": "string",
                    "example": "pcs"
                },
                "code": {
                    "description": "Product SKU/code",
                    "type": "string",
                    "example": "ABC001"
                },
                "description": {
                    "description": "Invoice item description",
                    "type": "string",
                    "example": "Sample Product 1"
                },
                "discount": {
                    "description": "Item discount per item",
                    "type": "integer",
                    "example": 10
                }
            },
            "type": "object"
        },
        "savedPurchase_item": {
            "properties": {
                "id": {
                    "description": "Purchase_item ID",
                    "type": "integer",
                    "example": "1"
                },
                "qty": {
                    "description": "Item's quantity",
                    "type": "integer",
                    "minimum": 1,
                    "example": "1"
                },
                "price": {
                    "description": "Item's unit price",
                    "type": "number",
                    "example": "100.00"
                },
                "discount": {
                    "description": "Item discount per item",
                    "type": "number",
                    "example": "10.00"
                },
                "total": {
                    "description": "Item's total",
                    "type": "number",
                    "example": "90.00"
                },
                "tax_label": {
                    "description": "Item's SST tax code. If not provided, default SST supply tax code will be used",
                    "type": "string",
                    "example": "SST-0"
                },
                "tax_value": {
                    "description": "Item's SST tax value in decimal value. If not provided, default SST supply tax value will be used",
                    "type": "number",
                    "example": "0.00"
                },
                "item_id": {
                    "description": "Product ID associated with this invoice item",
                    "type": "integer",
                    "example": "1"
                },
                "purchase_id": {
                    "description": "Sale Invoice ID associated with this invoice item",
                    "type": "integer",
                    "example": "1"
                },
                "unit": {
                    "description": "Unit measurement of this invoice item",
                    "type": "string",
                    "example": "pcs"
                },
                "code": {
                    "description": "Product SKU/code",
                    "type": "string",
                    "example": "ABC001"
                },
                "description": {
                    "description": "Invoice item description",
                    "type": "string",
                    "example": "Sample Product 1"
                }
            },
            "type": "object"
        },
        "listRecurring": {
            "properties": {
                "id": {
                    "description": "Recurring ID",
                    "type": "number",
                    "example": 1
                },
                "recurrable_id": {
                    "description": "Invoice ID",
                    "type": "number",
                    "example": 1001
                },
                "recurrable_type": {
                    "description": "Type of invoice",
                    "type": "string",
                    "example": "Sale"
                },
                "label": {
                    "description": "Invoice label",
                    "type": "string",
                    "example": "INV0001 : John Doe"
                },
                "frequency": {
                    "$ref": "#/definitions/recurringFrequency"
                },
                "next_on": {
                    "description": "Next on recurring date",
                    "type": "string",
                    "format": "date"
                },
                "recurrable": {
                    "$ref": "#/definitions/savedSale"
                }
            },
            "type": "object"
        },
        "recurringFrequency": {
            "properties": {
                "unit": {
                    "description": "Recurring frequency in day, week, month",
                    "type": "string",
                    "example": "day"
                },
                "num": {
                    "description": "Trigger recurring in specific day base on unit",
                    "type": "number",
                    "example": "1"
                }
            },
            "type": "object"
        },
        "deleteRecurring": {
            "properties": {
                "id": {
                    "description": "Recurring ID",
                    "type": "number",
                    "example": 1
                },
                "success": {
                    "description": "Status of API request",
                    "type": "string",
                    "example": "true"
                },
                "message": {
                    "description": "Message from the API",
                    "type": "string",
                    "example": "Successfully deleted the Object!"
                }
            },
            "type": "object"
        },
        "newSale": {
            "required": [
                "invoice_date",
                "gst_supply_date",
                "total",
                "grandTotal",
                "amount",
                "items",
                "payment_term",
                "terms"
            ],
            "properties": {
                "ref_num": {
                    "description": "Ref num of the invoice. If not provided, system will auto generate the next running num",
                    "type": "string",
                    "example": "INV0001"
                },
                "invoice_date": {
                    "description": "Invoice date",
                    "type": "string",
                    "format": "date"
                },
                "gst_supply_date": {
                    "description": "GST Supply Date. If GST is not enabled, assign with your Invoice date value",
                    "type": "string",
                    "format": "date"
                },
                "payee": {
                    "description": "Customer name. Accept *object* in format `{id: CUS_ID, name: CUS_NAME}` to associate with an existing Customer object.",
                    "type": "string",
                    "example": "John Doe"
                },
                "total": {
                    "description": "Total invoice amount (including GST if any)",
                    "type": "number",
                    "example": "203.65"
                },
                "grandTotal": {
                    "description": "Same as \"total\"",
                    "type": "number",
                    "example": "203.70"
                },
                "amount": {
                    "description": "Total amount paid",
                    "type": "number",
                    "example": "200.00"
                },
                "rounding": {
                    "description": "Rounding amount",
                    "type": "number",
                    "example": "0.05"
                },
                "roundingMode": {
                    "description": "`1 decimal point` Round to 1 decimals (0.01~0.04 = 0.0; 0.05~0.09 = 0.1). <br>`2 decimal points` Round to 2 decimals (0.01~0.02 = 0.00; 0.03~0.07 = 0.05; 0.08~0.09 = 0.10)",
                    "type": "number",
                    "example": "1"
                },
                "items": {
                    "description": "invoice items detail",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/newSale_item"
                    }
                },
                "recurring": {
                    "description": "Enable recurring feature for the invoice",
                    "$ref": "#/definitions/Recurring"
                },
                "customField": {
                    "description": "invoice custom field",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomField"
                    }
                },
                "methods": {
                    "description": "payment method(s) of this invoice",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PaymentMethod"
                    }
                },
                "is_gst": {
                    "description": "Determine if this invoice is subject to GST",
                    "type": "boolean",
                    "example": 1
                },
                "is_sst": {
                    "description": "Determine if this invoice is subject to SST",
                    "type": "boolean",
                    "example": 1
                },
                "is_receipt": {
                    "description": "Determine if this invoice is receipt or invoice. (Receipt=1, Invoice=0)",
                    "type": "boolean",
                    "example": 0
                },
                "tax_inclusive": {
                    "description": "[GST] Determine if this invoice is tax inclusive",
                    "type": "boolean",
                    "example": 0
                },
                "not_mixed_supply": {
                    "description": "[GST] Determine if this invoice is mixed supply",
                    "type": "boolean",
                    "default": 1
                },
                "discount": {
                    "description": "discount given on this invoice",
                    "$ref": "#/definitions/Discount"
                },
                "service_charge": {
                    "description": "service charge imposed on this invoice",
                    "$ref": "#/definitions/ServiceCharge"
                },
                "tax": {
                    "description": "tax imposed on this invoice",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tax"
                    }
                },
                "email": {
                    "description": "Customer email address",
                    "type": "string",
                    "format": "email",
                    "example": "customer@email.com"
                },
                "attn": {
                    "description": "\"Attn to\" field in invoice",
                    "type": "string"
                },
                "phone": {
                    "description": "Customer phone number",
                    "type": "string"
                },
                "staff_id": {
                    "description": "Staff/Salesperson ID associated with this invoice",
                    "type": "integer",
                    "default": "Same as Act As User ID",
                    "example": 1
                },
                "payment_term": {
                    "description": "payment term applied for this invoice",
                    "$ref": "#/definitions/PaymentTerm"
                },
                "branch": {
                    "description": "payment term applied for this invoice",
                    "$ref": "#/definitions/insertBranch"
                },
                "terms": {
                    "description": "payment term schedule table for this invoice",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PaymentTerm_item"
                    }
                }
            },
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/BillingAddress"
                },
                {
                    "$ref": "#/definitions/Address"
                }
            ]
        },
        "Recurring": {
            "required": [
                "enabled"
            ],
            "properties": {
                "enabled": {
                    "description": "Pass value 1 to enable recurring. Pass value 0 to disable recurring",
                    "type": "boolean",
                    "example": "0"
                },
                "until": {
                    "description": "Set recurring until date",
                    "type": "string",
                    "format": "date"
                },
                "frequency": {
                    "description": "Set recurring frequency details",
                    "$ref": "#/definitions/recurringFrequencyDetails"
                }
            },
            "type": "object"
        },
        "recurringFrequencyDetails": {
            "required": [
                "num"
            ],
            "properties": {
                "num": {
                    "description": "Pass value 1 to enable recurring. Pass value 0 to disable recurring",
                    "type": "boolean",
                    "example": "1"
                },
                "unit": {
                    "description": "Set recurring cycle",
                    "type": "string",
                    "example": "month"
                },
                "advanced": {
                    "description": "To enable feature of set the recurring day of the month",
                    "type": "string",
                    "example": true
                },
                "dom": {
                    "description": "Set the recurring day of the month",
                    "type": "number",
                    "format": "date",
                    "example": "2"
                }
            },
            "type": "object"
        },
        "salePayment": {
            "required": [
                "amount",
                "payment_date"
            ],
            "properties": {
                "payment_date": {
                    "description": "Payment date",
                    "type": "string",
                    "format": "date"
                },
                "amount": {
                    "description": "Total amount paid",
                    "type": "number",
                    "example": "200.00"
                },
                "desc": {
                    "description": "Payment remark",
                    "type": "string"
                },
                "method": {
                    "$ref": "#/definitions/PaymentMethod"
                }
            },
            "type": "object"
        },
        "searchSale": {
            "required": [
                "payee_id"
            ],
            "properties": {
                "payee_id": {
                    "description": "Key in sale invoice",
                    "type": "integer",
                    "example": "473"
                }
            },
            "type": "object"
        },
        "savedSale": {
            "properties": {
                "id": {
                    "description": "Invoice ID",
                    "type": "integer",
                    "example": "1"
                },
                "billing_addr": {
                    "description": "concatenated billing address string",
                    "type": "string",
                    "example": "No. 1, Jalan Berjaya, Petaling Jaya, 47180 Selangor"
                },
                "shipping_addr": {
                    "description": "concatenated shipping address string",
                    "type": "string",
                    "example": "No. 1, Jalan Berjaya, Petaling Jaya, 47180 Selangor"
                },
                "gst_supply_date": {
                    "type": "string",
                    "format": "date"
                },
                "invoice_date": {
                    "type": "string",
                    "format": "date"
                },
                "delivery_date": {
                    "type": "string",
                    "format": "date"
                },
                "due": {
                    "description": "Amount due",
                    "type": "number"
                },
                "paid": {
                    "description": "Amount paid",
                    "type": "number"
                },
                "total": {
                    "description": "Total invoice amount",
                    "type": "number"
                },
                "payee": {
                    "description": "Customer name",
                    "type": "string"
                },
                "payee_id": {
                    "description": "Customer ID",
                    "type": "integer"
                },
                "payment_status": {
                    "description": "Indicate if the invoice is fully paid. 1=Fully Paid, 0=Overdue",
                    "type": "boolean"
                },
                "payment_term": {
                    "type": "string"
                },
                "ref_num": {
                    "description": "Invoice ref num",
                    "type": "string",
                    "example": "INV0001"
                },
                "rounding": {
                    "type": "number"
                },
                "staff_id": {
                    "description": "Staff ID associated with this invoice",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "GetSaleSuccess": {
            "properties": {
                "id": {
                    "type": "number",
                    "example": "1"
                },
                "ref_num": {
                    "type": "string",
                    "example": "INV6500"
                },
                "invoice_date": {
                    "type": "string",
                    "format": "date"
                },
                "total": {
                    "type": "number",
                    "example": "50.00"
                },
                "currency": {
                    "description": "invoice currecy detail",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/currency"
                    }
                },
                "currency_total": {
                    "type": "number",
                    "example": "50.00"
                },
                "created_at": {
                    "type": "string",
                    "format": "date"
                },
                "delivery_date": {
                    "type": "string",
                    "format": "date"
                },
                "gst_supply_date": {
                    "type": "string",
                    "format": "date"
                },
                "paid": {
                    "type": "number",
                    "example": "50.00"
                },
                "due": {
                    "type": "number",
                    "example": "0.00"
                },
                "payment_status": {
                    "type": "number",
                    "example": "1"
                },
                "delivery_status": {
                    "type": "number",
                    "example": "0"
                },
                "shipping_addr": {
                    "type": "string",
                    "example": "4700 kuala lumpur"
                },
                "billing_addr": {
                    "type": "string",
                    "example": "4700 kuala lumpur"
                },
                "attn": {
                    "type": "string",
                    "example": "null"
                },
                "payment_term": {
                    "description": "invoice payment_term detail",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/payment_term_detail"
                    }
                },
                "staff_id": {
                    "type": "number",
                    "example": "1"
                },
                "meta": {
                    "type": "string",
                    "example": "email"
                },
                "due_date": {
                    "type": "string",
                    "example": "null"
                },
                "locked": {
                    "type": "number",
                    "example": "0"
                },
                "rounding": {
                    "type": "number",
                    "example": "0"
                },
                "branch_id": {
                    "type": "number",
                    "example": "1"
                },
                "created_time": {
                    "type": "string",
                    "format": "TIME_FORMAT"
                },
                "photos": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/invoice_photos"
                    }
                },
                "original_total": {
                    "type": "number",
                    "example": "50.00"
                },
                "email": {
                    "type": "string",
                    "example": "abc@hotmail.com"
                },
                "phone": {
                    "type": "number",
                    "example": "1234567890"
                },
                "billing_city": {
                    "type": "string",
                    "example": "Petaling Jaya"
                },
                "billing_state": {
                    "type": "string",
                    "example": "Selangor"
                },
                "billing_zipcode": {
                    "type": "number",
                    "example": "47301"
                },
                "addr": {
                    "type": "string",
                    "example": "jalan bestari, bukit tinggi"
                },
                "city": {
                    "type": "string",
                    "example": "Petaling"
                },
                "state": {
                    "type": "string",
                    "example": "Selangor"
                },
                "zipcode": {
                    "type": "number",
                    "example": "47301"
                },
                "discount": {
                    "description": "invoice discount detail",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/invoice_discount"
                    }
                },
                "is_receipt": {
                    "type": "number",
                    "example": "0"
                },
                "service_charge": {
                    "description": "invoice service charge detail",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/invoice_service_charge"
                    }
                },
                "tax_inclusive": {
                    "type": "number",
                    "example": "1"
                },
                "is_relief": {
                    "type": "number",
                    "example": "0"
                },
                "export_of_goods": {
                    "type": "string",
                    "example": "null"
                },
                "customField": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/invoice_customField"
                    }
                },
                "quote_id": {
                    "type": "string",
                    "example": "null"
                },
                "is_gst": {
                    "type": "number",
                    "example": "0"
                },
                "is_sst": {
                    "type": "number",
                    "example": "0"
                },
                "roundingMode": {
                    "type": "number",
                    "example": "2"
                },
                "recurring": {
                    "description": "invoice recurring detail",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/invoice_recurring"
                    }
                },
                "not_mixed_supply": {
                    "type": "number",
                    "example": "1"
                },
                "shipping_attn": {
                    "type": "string",
                    "example": "null"
                },
                "remark": {
                    "type": "string",
                    "example": "null"
                },
                "exchange_rate": {
                    "type": "number",
                    "example": "1.00000"
                },
                "billing_address": {
                    "type": "string",
                    "example": "jalan bestari, bukit tinggi"
                },
                "staff": {
                    "type": "string",
                    "example": "admin"
                },
                "payee": {
                    "description": "invoice payee detail",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/invoice_payee"
                    }
                },
                "items": {
                    "description": "invoice items detail",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/invoice_item"
                    }
                },
                "currency_paid": {
                    "type": "number",
                    "example": "50.00"
                },
                "currency_due": {
                    "type": "number",
                    "example": "0.00"
                },
                "tax": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/invoice_tax"
                    }
                },
                "has_tax": {
                    "type": "number",
                    "example": "0"
                },
                "terms": {
                    "description": "sales terms detail",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sales_terms"
                    }
                },
                "transactions": {
                    "description": "sales transaction detail",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sales_transaction"
                    }
                },
                "branch": {
                    "description": "sales branchs",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sales_branch"
                    }
                }
            },
            "type": "object"
        },
        "currency": {
            "properties": {
                "iso": {
                    "type": "number",
                    "example": "1"
                },
                "exchange_rate": {
                    "type": "number",
                    "example": "1.00000"
                },
                "is_based": {
                    "type": "number",
                    "example": "1"
                }
            },
            "type": "object"
        },
        "payment_term_detail": {
            "properties": {
                "id": {
                    "type": "number",
                    "example": "1"
                },
                "name": {
                    "type": "string",
                    "example": "Cash"
                },
                "is_default": {
                    "type": "boolean",
                    "example": "true"
                },
                "terms": {
                    "description": "terms of payment_term",
                    "$ref": "#/definitions/invoice_terms"
                }
            },
            "type": "object"
        },
        "invoice_terms": {
            "properties": {
                "percent": {
                    "type": "number",
                    "example": "100"
                },
                "due_unit": {
                    "description": "due unit details of terms",
                    "$ref": "#/definitions/term_unit"
                }
            },
            "type": "object"
        },
        "term_unit": {
            "properties": {
                "text": {
                    "type": "string",
                    "example": "today"
                },
                "group": {
                    "type": "string",
                    "example": "special"
                }
            },
            "type": "object"
        },
        "invoice_discount": {
            "properties": {
                "shown": {
                    "type": "boolean",
                    "example": "false"
                },
                "label": {
                    "type": "string",
                    "example": "MYR"
                },
                "tax": {
                    "type": "number",
                    "example": "0"
                },
                "value": {
                    "type": "number",
                    "example": "0"
                },
                "total": {
                    "type": "number",
                    "example": "0"
                }
            },
            "type": "object"
        },
        "invoice_service_charge": {
            "properties": {
                "label": {
                    "type": "string",
                    "example": "%"
                },
                "tax": {
                    "type": "number",
                    "example": "0"
                },
                "value": {
                    "type": "number",
                    "example": "0"
                },
                "total": {
                    "type": "number",
                    "example": "0"
                }
            },
            "type": "object"
        },
        "invoice_recurring": {
            "properties": {
                "enabled": {
                    "type": "number",
                    "example": "0"
                },
                "frequency": {
                    "description": "invoice frequency of recurring detail",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/invoice_recurring_frequency"
                    }
                }
            },
            "type": "object"
        },
        "invoice_recurring_frequency": {
            "properties": {
                "num": {
                    "type": "number",
                    "example": "1"
                },
                "unit": {
                    "type": "string",
                    "example": "month"
                }
            },
            "type": "object"
        },
        "invoice_payee": {
            "properties": {
                "id": {
                    "type": "number",
                    "example": "1999"
                },
                "name": {
                    "type": "string",
                    "example": "johnny"
                }
            },
            "type": "object"
        },
        "invoice_item": {
            "properties": {
                "id": {
                    "type": "number",
                    "example": "14986"
                },
                "sale_id": {
                    "type": "number",
                    "example": "6054"
                },
                "item_id": {
                    "type": "number",
                    "example": "300"
                },
                "qty": {
                    "type": "number",
                    "example": "1"
                },
                "price": {
                    "type": "number",
                    "example": "50.000"
                },
                "discount": {
                    "type": "number",
                    "example": "0.00"
                },
                "created_at": {
                    "type": "string",
                    "example": "date"
                },
                "tax_label": {
                    "type": "string",
                    "example": "n/a"
                },
                "tax_value": {
                    "type": "number",
                    "example": "0.00"
                },
                "delivered": {
                    "type": "number",
                    "example": "0"
                },
                "code": {
                    "type": "string",
                    "example": "M35500"
                },
                "description": {
                    "type": "string",
                    "example": "M Glossy"
                },
                "image": {
                    "type": "string",
                    "example": "null"
                },
                "unit": {
                    "type": "string",
                    "example": "null"
                },
                "meta": {
                    "type": "string",
                    "example": "null"
                },
                "total": {
                    "type": "number",
                    "example": "50.00"
                },
                "total_tax": {
                    "type": "number",
                    "example": "0.00"
                },
                "product": {
                    "description": "product thumbail path details",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/invoice_item_product"
                    }
                }
            },
            "type": "object"
        },
        "invoice_item_product": {
            "properties": {
                "thumbnail": {
                    "description": "product thumbnail path",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/invoice_item_product_thumbnail"
                    }
                },
                "id": {
                    "type": "number",
                    "example": "300"
                },
                "name": {
                    "type": "string",
                    "example": "5M Glossy"
                },
                "tax_label": {
                    "type": "string",
                    "example": "SR-0"
                },
                "tax_value": {
                    "type": "number",
                    "example": "0.00"
                },
                "s_coa": {
                    "type": "number",
                    "example": "7"
                },
                "p_coa": {
                    "type": "number",
                    "example": "133"
                }
            },
            "type": "object"
        },
        "invoice_item_product_thumbnail": {
            "type": "object"
        },
        "invoice_photos": {
            "type": "object"
        },
        "invoice_customField": {
            "type": "object"
        },
        "invoice_tax": {
            "type": "object"
        },
        "sales_terms": {
            "properties": {
                "schedulable_id": {
                    "type": "number",
                    "example": "6054"
                },
                "schedulable_type": {
                    "type": "string",
                    "example": "Sale"
                },
                "date": {
                    "type": "string",
                    "format": "date"
                },
                "amount": {
                    "type": "number",
                    "example": "50.00"
                },
                "remark": {
                    "type": "string",
                    "example": "100% | today"
                },
                "created_at": {
                    "type": "string",
                    "format": "date"
                },
                "id": {
                    "type": "number",
                    "example": "7567"
                },
                "paid": {
                    "type": "number",
                    "example": "50.00"
                },
                "payment_status": {
                    "type": "number",
                    "example": "1"
                }
            },
            "type": "object"
        },
        "sales_transaction": {
            "properties": {
                "payment_method": {
                    "type": "string",
                    "example": "Cash"
                },
                "id": {
                    "type": "number",
                    "example": "7269"
                },
                "payment_date": {
                    "type": "string",
                    "example": "date"
                },
                "amount": {
                    "type": "number",
                    "example": "50.00"
                },
                "description": {
                    "type": "string",
                    "example": "Payment Received"
                },
                "payment_method_id": {
                    "type": "number",
                    "example": "1"
                }
            },
            "type": "object"
        },
        "sales_branch": {
            "properties": {
                "id": {
                    "type": "number",
                    "example": "1"
                },
                "name": {
                    "type": "string",
                    "example": "HQ (PJ)"
                },
                "hq": {
                    "type": "number",
                    "format": "1"
                },
                "created_at": {
                    "type": "string",
                    "format": "TIMESTAMP"
                },
                "company_name": {
                    "type": "string",
                    "example": "Biztory Sdn Bhd"
                },
                "company_brn": {
                    "type": "string",
                    "format": "1255622-U"
                },
                "company_addr": {
                    "type": "string",
                    "example": "wisma,bukit tinngi"
                },
                "company_contact": {
                    "type": "number",
                    "example": "0123356895"
                },
                "comapny_fax": {
                    "type": "string",
                    "example": "null"
                },
                "company_email": {
                    "type": "string",
                    "example": "Biztory@gmail.com"
                }
            },
            "type": "object"
        },
        "newQuotation": {
            "required": [
                "invoice_date",
                "gst_supply_date",
                "payee",
                "amount",
                "items",
                "payment_term",
                "terms"
            ],
            "properties": {
                "ref_num": {
                    "description": "Ref num of the bill. If not provided, system will auto generate the next running num",
                    "type": "string",
                    "example": "PV0001"
                },
                "invoice_date": {
                    "description": "Bill date",
                    "type": "string",
                    "format": "date"
                },
                "gst_supply_date": {
                    "description": "GST Supply Date. If GST is not enabled, assign with your Bill date value",
                    "type": "string",
                    "format": "date"
                },
                "payee": {
                    "description": "Customer name. Accept *object* in format `{id: CUS_ID, name: CUS_NAME}` to associate with an existing Customer object.",
                    "type": "string",
                    "example": "John Doe"
                },
                "amount": {
                    "description": "Total amount paid",
                    "type": "number",
                    "example": "200.00"
                },
                "items": {
                    "description": "bill's line items detail",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/newExpense_item"
                    }
                },
                "customField": {
                    "description": "expense custom field",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomField"
                    }
                },
                "methods": {
                    "description": "payment method(s) of this invoice",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PaymentMethod"
                    }
                },
                "is_gst": {
                    "description": "Determine if this bill is subject to GST",
                    "type": "boolean",
                    "example": 1
                },
                "is_invoice": {
                    "description": "Determine if this invoice is receipt or invoice. (Receipt=0, Invoice=1)",
                    "type": "boolean",
                    "example": 0
                },
                "tax_inclusive": {
                    "description": "[GST] Determine if this invoice is tax inclusive",
                    "type": "boolean",
                    "example": 1
                }
            },
            "type": "object",
            "allOf": [
                {
                    "$ref": "#/definitions/BillingAddress"
                },
                {
                    "$ref": "#/definitions/Address"
                }
            ]
        },
        "newSale_item": {
            "required": [
                "qty",
                "price",
                "total",
                "total_tax",
                "product"
            ],
            "properties": {
                "qty": {
                    "description": "Item's quantity",
                    "type": "integer",
                    "minimum": 1,
                    "example": "2"
                },
                "price": {
                    "description": "Item's unit price",
                    "type": "number",
                    "example": "100.06"
                },
                "priceAfterDisc": {
                    "description": "Item price after discount",
                    "type": "number",
                    "example": "100.06"
                },
                "tax_label": {
                    "description": "Item's GST tax code. If not provided, default GST supply tax code will be used",
                    "type": "string",
                    "example": "SR"
                },
                "tax_value": {
                    "description": "Item's GST tax value in decimal value. If not provided, default GST supply tax value will be used",
                    "type": "number",
                    "example": "0.06"
                },
                "item_id": {
                    "description": "Product ID associated with this invoice item",
                    "type": "integer"
                },
                "total": {
                    "description": "Total sum of this invoice item",
                    "type": "number",
                    "example": "200.12"
                },
                "total_tax": {
                    "description": "GST total sum of this invoice item",
                    "type": "number",
                    "example": "12.01"
                },
                "totalAfterDisc": {
                    "description": "Item total after discount",
                    "type": "number",
                    "example": "200.12"
                },
                "unit": {
                    "description": "Unit measurement of this invoice item",
                    "type": "string",
                    "example": "pcs"
                },
                "code": {
                    "description": "Product SKU/code",
                    "type": "string",
                    "example": "PROD001"
                },
                "description": {
                    "description": "Invoice item description",
                    "type": "string",
                    "example": "Sample Product 1"
                },
                "product": {
                    "description": "Inject existing product for average cost",
                    "$ref": "#/definitions/ProductShowSuccess"
                }
            },
            "type": "object"
        },
        "savedSale_item": {
            "properties": {
                "id": {
                    "description": "Sale_item ID",
                    "type": "integer",
                    "example": "1"
                },
                "qty": {
                    "description": "Item's quantity",
                    "type": "integer",
                    "minimum": 1,
                    "example": "2"
                },
                "price": {
                    "description": "Item's unit price",
                    "type": "number",
                    "example": "100.00"
                },
                "tax_label": {
                    "description": "Item's GST tax code. If not provided, default GST supply tax code will be used",
                    "type": "string",
                    "example": "SR"
                },
                "tax_value": {
                    "description": "Item's GST tax value in decimal value. If not provided, default GST supply tax value will be used",
                    "type": "number",
                    "example": "0.06"
                },
                "item_id": {
                    "description": "Product ID associated with this invoice item",
                    "type": "integer",
                    "example": "1"
                },
                "sale_id": {
                    "description": "Sale Invoice ID associated with this invoice item",
                    "type": "integer",
                    "example": "1"
                },
                "unit": {
                    "description": "Unit measurement of this invoice item",
                    "type": "string",
                    "example": "pcs"
                },
                "code": {
                    "description": "Product SKU/code",
                    "type": "string",
                    "example": "ABC001"
                },
                "description": {
                    "description": "Invoice item description",
                    "type": "string",
                    "example": "Sample Product 1"
                }
            },
            "type": "object"
        },
        "SupplySst": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Unique identifier of the SST tax code",
                    "type": "integer",
                    "example": 13
                },
                "name": {
                    "description": "SST tax code label",
                    "type": "string",
                    "example": "SR"
                },
                "value": {
                    "description": "SST tax code value in decimal",
                    "type": "number",
                    "example": "0.06"
                }
            },
            "type": "object"
        },
        "PurchaseSst": {
            "required": [
                "id",
                "name"
            ],
            "properties": {
                "id": {
                    "description": "Unique identifier of the SST tax code",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "SST tax code label",
                    "type": "string",
                    "example": "TX"
                },
                "value": {
                    "description": "SST tax code value in decimal",
                    "type": "number",
                    "example": "0.06"
                }
            },
            "type": "object"
        },
        "transactionPivotRecord": {
            "properties": {
                "transaction_id": {
                    "type": "integer",
                    "example": "1"
                },
                "transactable_id": {
                    "type": "integer",
                    "example": "1"
                },
                "amount": {
                    "type": "number",
                    "example": "100.00"
                }
            },
            "type": "object"
        },
        "transactionSaleRecord": {
            "properties": {
                "id": {
                    "description": "Invoice ID",
                    "type": "integer",
                    "example": "1"
                },
                "ref_num": {
                    "description": "Invoice Number",
                    "type": "string",
                    "example": "INV0001"
                },
                "invoice_date": {
                    "type": "string",
                    "format": "date"
                },
                "total": {
                    "type": "number",
                    "example": "100.00"
                },
                "paid": {
                    "type": "number",
                    "example": "100.00"
                },
                "due": {
                    "type": "number",
                    "example": "0.00"
                },
                "pivot": {
                    "$ref": "#/definitions/transactionPivotRecord"
                }
            },
            "type": "object"
        },
        "transactionRecord": {
            "properties": {
                "id": {
                    "description": "ID",
                    "type": "integer",
                    "example": "1"
                },
                "ref_num": {
                    "description": "Transaction reference number",
                    "type": "string",
                    "example": "OR0001"
                },
                "payment_method_id": {
                    "description": "Payment method ID",
                    "type": "integer",
                    "example": "10"
                },
                "amount": {
                    "type": "number",
                    "example": "100.00"
                },
                "payment_date": {
                    "type": "string",
                    "format": "date"
                },
                "description": {
                    "description": "Payment remark",
                    "type": "string",
                    "example": "Cheque number #12345"
                },
                "payment_method_name": {
                    "type": "string",
                    "example": "Cheque"
                },
                "sales": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/transactionSaleRecord"
                    }
                }
            },
            "type": "object"
        },
        "getVendor": {
            "properties": {
                "id": {
                    "description": "Supplier ID",
                    "type": "integer",
                    "example": "1"
                },
                "name": {
                    "description": "Supplier name",
                    "type": "string",
                    "example": "John"
                },
                "shipping_addr": {
                    "description": "Shipping address",
                    "type": "string",
                    "example": "No. 1, Jalan Berjaya, Petaling Jaya, 47180 Selangor"
                },
                "shipping_zip": {
                    "description": "Shipping zipcode",
                    "type": "string",
                    "example": "53000"
                },
                "shipping_city": {
                    "description": "Shipping city",
                    "type": "string",
                    "example": "Ptaling Jaya"
                },
                "shipping_state": {
                    "description": "Shipping state",
                    "type": "string",
                    "example": "Selangor"
                },
                "shipping_country": {
                    "description": "Shipping country",
                    "type": "string",
                    "example": "Malaysia"
                },
                "billing_addr": {
                    "description": "Billing address",
                    "type": "string",
                    "example": "No. 1, Jalan Berjaya, Petaling Jaya, 47180 Selangor"
                },
                "billing_zip": {
                    "description": "Billing zipcode",
                    "type": "string",
                    "example": "53000"
                },
                "billing_city": {
                    "description": "Billing city",
                    "type": "string",
                    "example": "Ptaling Jaya"
                },
                "billing_state": {
                    "description": "Billing state",
                    "type": "string",
                    "example": "Selangor"
                },
                "billing_country": {
                    "description": "Billing country",
                    "type": "string",
                    "example": "Malaysia"
                },
                "phone": {
                    "description": "Contact number",
                    "type": "number",
                    "example": "01100000000"
                },
                "email": {
                    "description": "Email ddress",
                    "type": "string",
                    "example": "example@gmail.com"
                },
                "remark": {
                    "description": "Remark for additional information.",
                    "type": "string"
                },
                "brn": {
                    "description": "Business Registration Number.",
                    "type": "string"
                },
                "incometax_file_no": {
                    "description": "Income tax file number.",
                    "type": "string"
                },
                "grn": {
                    "description": "GST registration number.",
                    "type": "string"
                },
                "date_gst_status_verified": {
                    "description": "GST status verified date.",
                    "type": "string"
                },
                "fax": {
                    "description": "Fax number",
                    "type": "string"
                },
                "website": {
                    "description": "Website",
                    "type": "string"
                },
                "payment_term": {
                    "description": "Payment term",
                    "type": "string"
                },
                "account_number": {
                    "description": "Bank account number.",
                    "type": "string"
                },
                "bank_id": {
                    "description": "Type of bank.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "newVendor": {
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "description": "Supplier name",
                    "type": "boolean",
                    "example": "John Doe"
                },
                "email": {
                    "description": "Supllier's email",
                    "type": "string",
                    "example": "john@gmail.com"
                },
                "fax": {
                    "description": "Supplier's fax number",
                    "type": "number",
                    "example": "054562156"
                },
                "phone": {
                    "description": "Supplier's contact number",
                    "type": "number",
                    "example": "0111234567"
                },
                "billing_addr": {
                    "description": "Billing address",
                    "type": "string",
                    "example": "Jalan Berjaya"
                },
                "billing_zip": {
                    "description": "Billing zip",
                    "type": "number",
                    "example": "84000"
                },
                "billing_city": {
                    "description": "Billing city",
                    "type": "string",
                    "example": "Muar"
                },
                "billing_state": {
                    "description": "Billing state",
                    "type": "string",
                    "example": "Johor"
                }
            },
            "type": "object"
        },
        "VendorStoreSuccess": {
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "created": {
                    "type": "boolean",
                    "example": true
                },
                "updated": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Successfully updated Object!"
                },
                "data": {
                    "$ref": "#/definitions/savedVendor"
                }
            },
            "type": "object"
        },
        "savedVendor": {
            "properties": {
                "id": {
                    "description": "Supplier ID",
                    "type": "integer",
                    "example": "1"
                },
                "name": {
                    "description": "Supplier name",
                    "type": "String",
                    "example": "John Doe"
                },
                "billing_addr": {
                    "description": "Billing address",
                    "type": "string",
                    "example": ""
                },
                "billing_city": {
                    "description": "Billing city",
                    "type": "string",
                    "example": "Muar"
                },
                "billing_state": {
                    "description": "Billing state",
                    "type": "string",
                    "example": "Johor"
                },
                "billing_zip": {
                    "description": "Billing zip",
                    "type": "string",
                    "example": "84000"
                },
                "email": {
                    "description": "Supllier's email",
                    "type": "string",
                    "example": "john@gmail.com"
                },
                "fax": {
                    "description": "Supplier's fax number",
                    "type": "number",
                    "example": "054562156"
                },
                "phone": {
                    "description": "Supplier's contact number",
                    "type": "number",
                    "example": "0111234567"
                }
            },
            "type": "object"
        },
        "commandSuccess": {
            "properties": {
                "success": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "empty_cache success!"
                }
            },
            "type": "object"
        }
    },
    "tags": [
        {
            "name": "login/logout",
            "description": "Everything about Login"
        },
        {
            "name": "wallet",
            "description": "Everything about Wallet. **Wallet** is the *house* where you keep your money, it could be physical or virtual."
        },
        {
            "name": "chart of account",
            "description": "Everything about Chart of Account"
        },
        {
            "name": "expense",
            "description": "Everything about Expense"
        },
        {
            "name": "journal",
            "description": "Everything about Journal"
        },
        {
            "name": "payment method",
            "description": "Everything about Payment Method. **Payment Method** is the *road* or *path* how you transmit your \nmoney, in or out. We have designed the Payment Method to be isolated, so you have to define each Payment Method \nfor in (`receivable`), out (`payable`) or transfer between Accounts (`transfer`)."
        },
        {
            "name": "product",
            "description": "Everything about Product"
        },
        {
            "name": "purchase",
            "description": "Everything about Purchase invoice"
        },
        {
            "name": "recurring",
            "description": "Everything about Recurring"
        },
        {
            "name": "sale",
            "description": "Everything about Sale invoice"
        },
        {
            "name": "command",
            "description": "Everything about Commands"
        }
    ]
}